'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.PageIndex = undefined;

var _jsx2 = require('babel-runtime/helpers/jsx');

var _jsx3 = _interopRequireDefault(_jsx2);

var _extends2 = require('babel-runtime/helpers/extends');

var _extends3 = _interopRequireDefault(_extends2);

var _objectWithoutProperties2 = require('babel-runtime/helpers/objectWithoutProperties');

var _objectWithoutProperties3 = _interopRequireDefault(_objectWithoutProperties2);

var _withHandlers2 = require('recompose/withHandlers');

var _withHandlers3 = _interopRequireDefault(_withHandlers2);

var _setPropTypes2 = require('recompose/setPropTypes');

var _setPropTypes3 = _interopRequireDefault(_setPropTypes2);

var _defaultProps2 = require('recompose/defaultProps');

var _defaultProps3 = _interopRequireDefault(_defaultProps2);

var _pure2 = require('recompose/pure');

var _pure3 = _interopRequireDefault(_pure2);

var _compose2 = require('recompose/compose');

var _compose3 = _interopRequireDefault(_compose2);

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _classnames = require('classnames');

var _classnames2 = _interopRequireDefault(_classnames);

var _emptyFunction = require('fbjs/lib/emptyFunction');

var _emptyFunction2 = _interopRequireDefault(_emptyFunction);

var _ControllablePagination = require('./styles/ControllablePagination.css');

var _ControllablePagination2 = _interopRequireDefault(_ControllablePagination);

var _MiChevronTop = require('mtk-icon/lib/MiChevronTop');

var _MiChevronTop2 = _interopRequireDefault(_MiChevronTop);

var _MiChevronLeft = require('mtk-icon/lib/MiChevronLeft');

var _MiChevronLeft2 = _interopRequireDefault(_MiChevronLeft);

var _MiChevronRight = require('mtk-icon/lib/MiChevronRight');

var _MiChevronRight2 = _interopRequireDefault(_MiChevronRight);

var _MiChevronLast = require('mtk-icon/lib/MiChevronLast');

var _MiChevronLast2 = _interopRequireDefault(_MiChevronLast);

var _MiMoreHoriz = require('mtk-icon/lib/MiMoreHoriz');

var _MiMoreHoriz2 = _interopRequireDefault(_MiMoreHoriz);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var PageIndex = exports.PageIndex = (0, _compose3.default)((0, _setPropTypes3.default)({
  page: _react.PropTypes.number,
  active: _react.PropTypes.bool,
  onClick: _react.PropTypes.func
}), (0, _withHandlers3.default)({
  onClick: function onClick(props) {
    return function (e) {
      return props.onClick(e, props.page);
    };
  }
}), _pure3.default)(function (_ref) {
  var active = _ref.active,
      page = _ref.page,
      otherProps = (0, _objectWithoutProperties3.default)(_ref, ['active', 'page']);

  return _react2.default.createElement(
    'div',
    (0, _extends3.default)({
      className: active ? _ControllablePagination2.default.activeIndex : _ControllablePagination2.default.pageIndex,
      key: page
    }, otherProps),
    page
  );
});

var showDots = function showDots(max, now) {
  return max > 6 && max - now > 2;
};

var PageIndexs = (0, _pure3.default)(function (_ref2) {
  var now = _ref2.now,
      max = _ref2.max,
      onPageChange = _ref2.onPageChange;

  var paginationButtonLength = showDots(max, now) ? 5 : 6;
  var head = 1;
  var end = paginationButtonLength; // six numbers display on pagination each time
  var pagesToDisplayArray = [];

  if (max > paginationButtonLength) {
    if (now < 3) {
      // Current index at left edges(Do nothing, (head, end) remain the same)
    } else if (now >= max - 2) {
      // Current index at right edges
      head = max - (paginationButtonLength - 1);
      end = max;
    } else {
      // Current index in between [3, max-2]
      head = now - Math.floor(paginationButtonLength / 2);
      end = now + Math.floor(paginationButtonLength / 2);
    }
  } else if (max <= paginationButtonLength) {
    // If page number <= 6, display all page index
    end = max;
  }
  for (var i = head; i <= end; i++) {
    pagesToDisplayArray.push((0, _jsx3.default)(PageIndex, {
      onClick: onPageChange,
      active: i === now,
      page: i
    }, i));
  }
  return (0, _jsx3.default)('div', {
    className: _ControllablePagination2.default.pageIndexsWrap
  }, void 0, pagesToDisplayArray);
});

var ControllablePagination = function ControllablePagination(_ref3) {
  var max = _ref3.max,
      now = _ref3.now,
      className = _ref3.className,
      gotoTop = _ref3.gotoTop,
      gotoPrevious = _ref3.gotoPrevious,
      gotoNext = _ref3.gotoNext,
      gotoLast = _ref3.gotoLast,
      onPageChange = _ref3.onPageChange,
      otherProps = (0, _objectWithoutProperties3.default)(_ref3, ['max', 'now', 'className', 'gotoTop', 'gotoPrevious', 'gotoNext', 'gotoLast', 'onPageChange']);
  return _react2.default.createElement(
    'div',
    (0, _extends3.default)({}, otherProps, { className: (0, _classnames2.default)(_ControllablePagination2.default.wrap, className) }),
    (0, _jsx3.default)(_MiChevronTop2.default, {
      className: (0, _classnames2.default)(_ControllablePagination2.default.icon, now <= 1 && _ControllablePagination2.default.disabled),
      onClick: gotoTop
    }),
    (0, _jsx3.default)(_MiChevronLeft2.default, {
      className: (0, _classnames2.default)(_ControllablePagination2.default.icon, now <= 1 && _ControllablePagination2.default.disabled),
      onClick: gotoPrevious
    }),
    _react2.default.createElement(PageIndexs, { now: now, max: max, onPageChange: onPageChange }),
    showDots(max, now) && (0, _jsx3.default)(_MiMoreHoriz2.default, {
      className: _ControllablePagination2.default.dots
    }),
    (0, _jsx3.default)(_MiChevronRight2.default, {
      className: (0, _classnames2.default)(_ControllablePagination2.default.icon, now >= max && _ControllablePagination2.default.disabled),
      onClick: gotoNext
    }),
    (0, _jsx3.default)(_MiChevronLast2.default, {
      className: (0, _classnames2.default)(_ControllablePagination2.default.icon, now >= max && _ControllablePagination2.default.disabled),
      onClick: gotoLast
    })
  );
};

exports.default = (0, _compose3.default)(_pure3.default, (0, _defaultProps3.default)({
  onChange: _emptyFunction2.default
}), (0, _setPropTypes3.default)({
  className: _react.PropTypes.string,
  max: _react.PropTypes.oneOfType([_react.PropTypes.number, _react.PropTypes.string]).isRequired,
  now: _react.PropTypes.oneOfType([_react.PropTypes.number, _react.PropTypes.string]).isRequired,
  onChange: _react.PropTypes.func.isRequired
}), (0, _withHandlers3.default)({
  onPageChange: function onPageChange(props) {
    return function (e, page) {
      return props.onChange(e, page);
    };
  },
  gotoTop: function gotoTop(props) {
    return function (e) {
      return props.onChange(e, 1);
    };
  },
  gotoPrevious: function gotoPrevious(props) {
    return function (e) {
      return props.onChange(e, Math.max(props.now - 1, 1));
    };
  },
  gotoNext: function gotoNext(props) {
    return function (e) {
      return props.onChange(e, Math.min(props.max, props.now + 1));
    };
  },
  gotoLast: function gotoLast(props) {
    return function (e) {
      return props.onChange(e, props.max);
    };
  }
}))(ControllablePagination);