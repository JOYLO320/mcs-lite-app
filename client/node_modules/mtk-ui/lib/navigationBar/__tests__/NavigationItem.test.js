'use strict';

var _classCallCheck2 = require('babel-runtime/helpers/classCallCheck');

var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);

var _createClass2 = require('babel-runtime/helpers/createClass');

var _createClass3 = _interopRequireDefault(_createClass2);

var _possibleConstructorReturn2 = require('babel-runtime/helpers/possibleConstructorReturn');

var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);

var _inherits2 = require('babel-runtime/helpers/inherits');

var _inherits3 = _interopRequireDefault(_inherits2);

var _jsx2 = require('babel-runtime/helpers/jsx');

var _jsx3 = _interopRequireDefault(_jsx2);

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _reactDom = require('react-dom');

var _ReactTestUtils = require('react/lib/ReactTestUtils');

var _ReactTestUtils2 = _interopRequireDefault(_ReactTestUtils);

var _NavigationItem = require('../NavigationItem');

var _NavigationItem2 = _interopRequireDefault(_NavigationItem);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

describe('NavigationItem', function () {
  it('renders without problems', function () {
    var instance = _ReactTestUtils2.default.renderIntoDocument((0, _jsx3.default)(_NavigationItem2.default, {}));
    expect(instance).to.exist;
  });

  it('calls onClick when clicked', function () {
    var onClickSpy = sinon.spy();
    var instance = _ReactTestUtils2.default.renderIntoDocument((0, _jsx3.default)(_NavigationItem2.default, {
      onClick: onClickSpy
    }));

    _ReactTestUtils2.default.Simulate.click((0, _reactDom.findDOMNode)(instance));
    expect(onClickSpy).to.have.been.calledOnce;
  });

  it('calls props.onClick and context.onSelet when clicked', function () {
    var _class, _temp2;

    var onSelectSpy = sinon.spy();
    var onClickSpy = sinon.spy();

    var Container = (_temp2 = _class = function (_React$Component) {
      (0, _inherits3.default)(Container, _React$Component);

      function Container() {
        var _ref;

        var _temp, _this, _ret;

        (0, _classCallCheck3.default)(this, Container);

        for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
          args[_key] = arguments[_key];
        }

        return _ret = (_temp = (_this = (0, _possibleConstructorReturn3.default)(this, (_ref = Container.__proto__ || Object.getPrototypeOf(Container)).call.apply(_ref, [this].concat(args))), _this), _this.getChildContext = function () {
          return { onSelect: onSelectSpy };
        }, _temp), (0, _possibleConstructorReturn3.default)(_this, _ret);
      }

      (0, _createClass3.default)(Container, [{
        key: 'render',
        value: function render() {
          return _react2.default.createElement(_NavigationItem2.default, { onClick: onClickSpy, value: 'yolo', ref: 'navItem' });
        }
      }]);
      return Container;
    }(_react2.default.Component), _class.childContextTypes = { onSelect: _react.PropTypes.func }, _temp2);

    var instance = _ReactTestUtils2.default.renderIntoDocument((0, _jsx3.default)(Container, {}));
    _ReactTestUtils2.default.Simulate.click((0, _reactDom.findDOMNode)(instance.refs.navItem));

    expect(onSelectSpy).to.have.been.calledWith(sinon.match.any, 'yolo');
    expect(onClickSpy).to.have.been.calledWith(sinon.match.any, 'yolo');
  });

  it('supports for tagName', function () {
    var instance = _ReactTestUtils2.default.renderIntoDocument((0, _jsx3.default)(_NavigationItem2.default, {
      tagName: 'a'
    }));

    expect(_ReactTestUtils2.default.findRenderedDOMComponentWithTag(instance, 'a')).to.exist;
  });
});