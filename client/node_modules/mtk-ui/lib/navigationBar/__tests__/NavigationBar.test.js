'use strict';

var _jsx2 = require('babel-runtime/helpers/jsx');

var _jsx3 = _interopRequireDefault(_jsx2);

var _classCallCheck2 = require('babel-runtime/helpers/classCallCheck');

var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);

var _possibleConstructorReturn2 = require('babel-runtime/helpers/possibleConstructorReturn');

var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);

var _inherits2 = require('babel-runtime/helpers/inherits');

var _inherits3 = _interopRequireDefault(_inherits2);

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _ReactTestUtils = require('react/lib/ReactTestUtils');

var _ReactTestUtils2 = _interopRequireDefault(_ReactTestUtils);

var _NavigationBar = require('../NavigationBar');

var _NavigationBar2 = _interopRequireDefault(_NavigationBar);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

describe('NavigationBar', function () {
  it('passes down its value and onSelect as context', function () {
    var _class, _temp2;

    var Child = (_temp2 = _class = function (_React$Component) {
      (0, _inherits3.default)(Child, _React$Component);

      function Child() {
        var _ref;

        var _temp, _this, _ret;

        (0, _classCallCheck3.default)(this, Child);

        for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
          args[_key] = arguments[_key];
        }

        return _ret = (_temp = (_this = (0, _possibleConstructorReturn3.default)(this, (_ref = Child.__proto__ || Object.getPrototypeOf(Child)).call.apply(_ref, [this].concat(args))), _this), _this.render = function () {
          return (0, _jsx3.default)('div', {});
        }, _temp), (0, _possibleConstructorReturn3.default)(_this, _ret);
      }

      return Child;
    }(_react2.default.Component), _class.contextTypes = {
      selectedValue: _react.PropTypes.any,
      onSelect: _react.PropTypes.func
    }, _temp2);


    var value = 'foo';
    var handleSelect = function handleSelect() {};

    var instance = _ReactTestUtils2.default.renderIntoDocument((0, _jsx3.default)(_NavigationBar2.default, {
      value: value,
      onSelect: handleSelect
    }, void 0, (0, _jsx3.default)(Child, {})));

    var child = _ReactTestUtils2.default.findRenderedComponentWithType(instance, Child);

    expect(child.context.selectedValue).to.be.equal(value);
    expect(child.context.onSelect).to.be.equal(handleSelect);
  });
});