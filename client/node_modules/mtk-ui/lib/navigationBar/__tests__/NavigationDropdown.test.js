'use strict';

var _jsx2 = require('babel-runtime/helpers/jsx');

var _jsx3 = _interopRequireDefault(_jsx2);

var _classCallCheck2 = require('babel-runtime/helpers/classCallCheck');

var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);

var _possibleConstructorReturn2 = require('babel-runtime/helpers/possibleConstructorReturn');

var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);

var _inherits2 = require('babel-runtime/helpers/inherits');

var _inherits3 = _interopRequireDefault(_inherits2);

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _reactDom = require('react-dom');

var _ReactTestUtils = require('react/lib/ReactTestUtils');

var _ReactTestUtils2 = _interopRequireDefault(_ReactTestUtils);

var _reactOverlays = require('react-overlays');

var _NavigationDropdown = require('../NavigationDropdown');

var _NavigationDropdown2 = _interopRequireDefault(_NavigationDropdown);

var _NavigationDropdown3 = require('../styles/NavigationDropdown.css');

var _NavigationDropdown4 = _interopRequireDefault(_NavigationDropdown3);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

describe('NavigationDropdown', function () {
  it('toggles its menu when it has been clicked', function () {
    var Wrap = function (_React$Component) {
      (0, _inherits3.default)(Wrap, _React$Component);

      function Wrap() {
        var _ref;

        var _temp, _this, _ret;

        (0, _classCallCheck3.default)(this, Wrap);

        for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
          args[_key] = arguments[_key];
        }

        return _ret = (_temp = (_this = (0, _possibleConstructorReturn3.default)(this, (_ref = Wrap.__proto__ || Object.getPrototypeOf(Wrap)).call.apply(_ref, [this].concat(args))), _this), _this.render = function () {
          return (0, _jsx3.default)(_NavigationDropdown2.default, {});
        }, _temp), (0, _possibleConstructorReturn3.default)(_this, _ret);
      }

      return Wrap;
    }(_react2.default.Component);

    var instance = _ReactTestUtils2.default.renderIntoDocument((0, _jsx3.default)(Wrap, {}));
    var overlay = _ReactTestUtils2.default.findRenderedComponentWithType(instance, _reactOverlays.Overlay);

    expect(overlay.props.show).to.be.false;
    _ReactTestUtils2.default.Simulate.click((0, _reactDom.findDOMNode)(instance));
    expect(overlay.props.show).to.be.true;
  });

  it('is active if one of its item matching provided value ', function () {
    var _class2, _temp3;

    var Container = (_temp3 = _class2 = function (_React$Component2) {
      (0, _inherits3.default)(Container, _React$Component2);

      function Container() {
        var _ref2;

        var _temp2, _this2, _ret2;

        (0, _classCallCheck3.default)(this, Container);

        for (var _len2 = arguments.length, args = Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {
          args[_key2] = arguments[_key2];
        }

        return _ret2 = (_temp2 = (_this2 = (0, _possibleConstructorReturn3.default)(this, (_ref2 = Container.__proto__ || Object.getPrototypeOf(Container)).call.apply(_ref2, [this].concat(args))), _this2), _this2.state = { selectedValue: 'bar' }, _this2.getChildContext = function () {
          return { selectedValue: _this2.state.selectedValue };
        }, _this2.render = function () {
          return (0, _jsx3.default)(_NavigationDropdown2.default, {
            items: [{ value: 'foo' }]
          });
        }, _temp2), (0, _possibleConstructorReturn3.default)(_this2, _ret2);
      }

      return Container;
    }(_react2.default.Component), _class2.childContextTypes = { selectedValue: _react.PropTypes.string }, _temp3);

    var instance = _ReactTestUtils2.default.renderIntoDocument((0, _jsx3.default)(Container, {}));

    expect(_ReactTestUtils2.default.findRenderedDOMComponentWithClass(instance, _NavigationDropdown4.default.default)).to.be.exist;

    instance.setState({ selectedValue: 'foo' });
    expect(_ReactTestUtils2.default.findRenderedDOMComponentWithClass(instance, _NavigationDropdown4.default.active)).to.be.exist;
  });
});