'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.NavigationDropdown = undefined;

var _objectWithoutProperties2 = require('babel-runtime/helpers/objectWithoutProperties');

var _objectWithoutProperties3 = _interopRequireDefault(_objectWithoutProperties2);

var _classCallCheck2 = require('babel-runtime/helpers/classCallCheck');

var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);

var _createClass2 = require('babel-runtime/helpers/createClass');

var _createClass3 = _interopRequireDefault(_createClass2);

var _possibleConstructorReturn2 = require('babel-runtime/helpers/possibleConstructorReturn');

var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);

var _inherits2 = require('babel-runtime/helpers/inherits');

var _inherits3 = _interopRequireDefault(_inherits2);

var _extends2 = require('babel-runtime/helpers/extends');

var _extends3 = _interopRequireDefault(_extends2);

var _jsx2 = require('babel-runtime/helpers/jsx');

var _jsx3 = _interopRequireDefault(_jsx2);

var _omit2 = require('lodash/fp/omit');

var _omit3 = _interopRequireDefault(_omit2);

var _class, _temp2;

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _reactDom = require('react-dom');

var _classnames = require('classnames');

var _classnames2 = _interopRequireDefault(_classnames);

var _compose = require('recompose/compose');

var _compose2 = _interopRequireDefault(_compose);

var _withState = require('recompose/withState');

var _withState2 = _interopRequireDefault(_withState);

var _defaultProps = require('recompose/defaultProps');

var _defaultProps2 = _interopRequireDefault(_defaultProps);

var _getContext = require('recompose/getContext');

var _getContext2 = _interopRequireDefault(_getContext);

var _withPropsOnChange = require('recompose/withPropsOnChange');

var _withPropsOnChange2 = _interopRequireDefault(_withPropsOnChange);

var _pure = require('recompose/pure');

var _pure2 = _interopRequireDefault(_pure);

var _reactOverlays = require('react-overlays');

var _MiFold = require('mtk-icon/lib/MiFold');

var _MiFold2 = _interopRequireDefault(_MiFold);

var _SlideDown = require('../Transitions/SlideDown');

var _SlideDown2 = _interopRequireDefault(_SlideDown);

var _NavigationItem = require('./NavigationItem');

var _NavigationItem2 = _interopRequireDefault(_NavigationItem);

var _NavigationDropdown = require('./styles/NavigationDropdown.css');

var _NavigationDropdown2 = _interopRequireDefault(_NavigationDropdown);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var NavigationDropdownBody = (0, _pure2.default)(function (_ref) {
  var items = _ref.items,
      ItemComponent = _ref.ItemComponent,
      positionLeft = _ref.positionLeft,
      positionTop = _ref.positionTop;
  return (0, _jsx3.default)('div', {
    className: _NavigationDropdown2.default.overlay,
    style: {
      left: positionLeft,
      top: positionTop
    }
  }, void 0, items.map(function (props, index) {
    return (0, _react.createElement)(ItemComponent, (0, _extends3.default)({}, props, {
      key: props.key || index,
      className: (0, _classnames2.default)(_NavigationDropdown2.default.item, props.className)
    }));
  }));
});

var container = (0, _compose2.default)((0, _getContext2.default)({ selectedValue: _react.PropTypes.any }), (0, _defaultProps2.default)({
  items: [],
  itemComponent: _NavigationItem2.default
}), (0, _withPropsOnChange2.default)(['items', 'selectedValue'], function (props) {
  var items = props.items,
      selectedValue = props.selectedValue;

  return {
    isActive: items.some(function (_ref2) {
      var value = _ref2.value;
      return value === selectedValue;
    })
  };
}), (0, _withState2.default)('isMenuShow', 'setIsMenuShow', false), _pure2.default);

var NavigationDropdown = exports.NavigationDropdown = (_temp2 = _class = function (_React$Component) {
  (0, _inherits3.default)(NavigationDropdown, _React$Component);

  function NavigationDropdown() {
    var _ref3;

    var _temp, _this, _ret;

    (0, _classCallCheck3.default)(this, NavigationDropdown);

    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    return _ret = (_temp = (_this = (0, _possibleConstructorReturn3.default)(this, (_ref3 = NavigationDropdown.__proto__ || Object.getPrototypeOf(NavigationDropdown)).call.apply(_ref3, [this].concat(args))), _this), _this.onCloseMenu = function () {
      return _this.props.setIsMenuShow(false);
    }, _this.onToggleMenu = function () {
      return _this.props.setIsMenuShow(!_this.props.isMenuShow);
    }, _this.getTarget = function () {
      return (0, _reactDom.findDOMNode)(_this);
    }, _temp), (0, _possibleConstructorReturn3.default)(_this, _ret);
  }

  (0, _createClass3.default)(NavigationDropdown, [{
    key: 'render',
    value: function render() {
      var _props = this.props,
          className = _props.className,
          children = _props.children,
          isMenuShow = _props.isMenuShow,
          items = _props.items,
          isActive = _props.isActive,
          ItemComponent = _props.itemComponent,
          otherProps = (0, _objectWithoutProperties3.default)(_props, ['className', 'children', 'isMenuShow', 'items', 'isActive', 'itemComponent']);


      return _react2.default.createElement(
        'div',
        { ref: 'container',
          className: _NavigationDropdown2.default.wrap,
          onClick: this.onToggleMenu
        },
        _react2.default.createElement(
          'div',
          (0, _extends3.default)({}, (0, _omit3.default)(['setIsMenuShow', 'selectedValue'], otherProps), {
            className: (0, _classnames2.default)(isActive ? _NavigationDropdown2.default.active : _NavigationDropdown2.default.default, isMenuShow && _NavigationDropdown2.default.onMenuShow, className)
          }),
          children,
          (0, _jsx3.default)(_MiFold2.default, {
            className: isMenuShow ? _NavigationDropdown2.default.activeFoldIcon : _NavigationDropdown2.default.foldIcon
          })
        ),
        (0, _jsx3.default)(_reactOverlays.Overlay, {
          show: isMenuShow,
          onHide: this.onCloseMenu,
          rootClose: true,
          placement: 'bottom',
          container: this.refs.container,
          target: this.getTarget,
          transition: _SlideDown2.default
        }, void 0, (0, _jsx3.default)(NavigationDropdownBody, {
          items: items,
          ItemComponent: ItemComponent
        }))
      );
    }
  }]);
  return NavigationDropdown;
}(_react2.default.Component), _class.propTypes = {
  items: _react.PropTypes.arrayOf(_react.PropTypes.shape({
    value: _react.PropTypes.any,
    children: _react.PropTypes.node
  })),
  children: _react.PropTypes.node,
  className: _react.PropTypes.node,
  isMenuShow: _react.PropTypes.bool,
  setIsMenuShow: _react.PropTypes.func,
  isActive: _react.PropTypes.bool,
  itemComponent: _react.PropTypes.oneOfType([_react.PropTypes.object, _react.PropTypes.func]).isRequired
}, _temp2);
exports.default = container(NavigationDropdown);