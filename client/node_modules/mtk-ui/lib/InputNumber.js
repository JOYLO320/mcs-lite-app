'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _extends2 = require('babel-runtime/helpers/extends');

var _extends3 = _interopRequireDefault(_extends2);

var _objectWithoutProperties2 = require('babel-runtime/helpers/objectWithoutProperties');

var _objectWithoutProperties3 = _interopRequireDefault(_objectWithoutProperties2);

var _withHandlers2 = require('recompose/withHandlers');

var _withHandlers3 = _interopRequireDefault(_withHandlers2);

var _defaultProps2 = require('recompose/defaultProps');

var _defaultProps3 = _interopRequireDefault(_defaultProps2);

var _setPropTypes2 = require('recompose/setPropTypes');

var _setPropTypes3 = _interopRequireDefault(_setPropTypes2);

var _pure2 = require('recompose/pure');

var _pure3 = _interopRequireDefault(_pure2);

var _compose2 = require('recompose/compose');

var _compose3 = _interopRequireDefault(_compose2);

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _createChainedFunction = require('react-overlays/lib/utils/createChainedFunction');

var _createChainedFunction2 = _interopRequireDefault(_createChainedFunction);

var _fitNumber = require('./utils/fitNumber');

var _fitNumber2 = _interopRequireDefault(_fitNumber);

var _classnames = require('classnames');

var _classnames2 = _interopRequireDefault(_classnames);

var _emptyFunction = require('fbjs/lib/emptyFunction');

var _emptyFunction2 = _interopRequireDefault(_emptyFunction);

var _defaultPropHandler = require('./decorators/defaultPropHandler');

var _defaultPropHandler2 = _interopRequireDefault(_defaultPropHandler);

var _InputText = require('./InputText');

var _InputText2 = _interopRequireDefault(_InputText);

var _InputNumber = require('./styles/InputNumber.css');

var _InputNumber2 = _interopRequireDefault(_InputNumber);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var InputNumber = function InputNumber(_ref) {
  var className = _ref.className,
      otherProps = (0, _objectWithoutProperties3.default)(_ref, ['className']);
  return _react2.default.createElement(_InputText2.default, (0, _extends3.default)({}, otherProps, {
    type: 'number',
    className: (0, _classnames2.default)(_InputNumber2.default.base, className)
  }));
};

exports.default = (0, _compose3.default)(_pure3.default, (0, _defaultProps3.default)({
  onChange: _emptyFunction2.default,
  onBlur: _emptyFunction2.default
}), (0, _setPropTypes3.default)({
  max: _react.PropTypes.oneOfType([_react.PropTypes.number, _react.PropTypes.string]),
  min: _react.PropTypes.oneOfType([_react.PropTypes.number, _react.PropTypes.string]),
  step: _react.PropTypes.oneOfType([_react.PropTypes.number, _react.PropTypes.string]),
  onChange: _react.PropTypes.func, // (e, value)
  onBlur: _react.PropTypes.func, // (e, value)
  className: _react.PropTypes.string,
  fitOnBlur: _react.PropTypes.bool,
  leftpad: _react.PropTypes.number
}), (0, _defaultPropHandler2.default)('value', 'onChange', function (setValue) {
  return function (e, value) {
    return setValue(value);
  };
}, function (props) {
  return props.leftpad && props.defaultValue ? prependZero(props.defaultValue, props.leftpad) : props.defaultValue;
}), (0, _withHandlers3.default)({
  onChange: function onChange(props) {
    return function (e) {
      return props.onChange(e, prependZero(e.target.value, props.leftpad));
    };
  },
  onBlur: function onBlur(props) {
    return function (e) {
      var onChange = props.onChange,
          onBlur = props.onBlur,
          min = props.min,
          max = props.max,
          step = props.step,
          fitOnBlur = props.fitOnBlur,
          value = props.value,
          leftpad = props.leftpad;

      var newValue = fitOnBlur ? (0, _fitNumber2.default)(Number(e.target.value), Number(min), Number(max), Number(step)) : Number(e.target.value);

      (0, _createChainedFunction2.default)(newValue !== Number(value) ? onChange : null, onBlur)(e, prependZero(newValue, leftpad));
    };
  }
}))(InputNumber);


function prependZero(value, leftpad) {
  if (leftpad === undefined) {
    return value;
  }
  var numValue = Number(value); // remove zeros from '0001'
  var currentDigits = String(numValue).length;
  return currentDigits < leftpad ? '0'.repeat(leftpad - currentDigits) + numValue : String(numValue);
}
module.exports = exports['default'];