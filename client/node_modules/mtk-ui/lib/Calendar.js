'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = undefined;

var _extends2 = require('babel-runtime/helpers/extends');

var _extends3 = _interopRequireDefault(_extends2);

var _jsx2 = require('babel-runtime/helpers/jsx');

var _jsx3 = _interopRequireDefault(_jsx2);

var _classCallCheck2 = require('babel-runtime/helpers/classCallCheck');

var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);

var _createClass2 = require('babel-runtime/helpers/createClass');

var _createClass3 = _interopRequireDefault(_createClass2);

var _possibleConstructorReturn2 = require('babel-runtime/helpers/possibleConstructorReturn');

var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);

var _inherits2 = require('babel-runtime/helpers/inherits');

var _inherits3 = _interopRequireDefault(_inherits2);

var _omit2 = require('lodash/fp/omit');

var _omit3 = _interopRequireDefault(_omit2);

var _pure2 = require('recompose/pure');

var _pure3 = _interopRequireDefault(_pure2);

var _dec, _class, _class2, _temp;

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _classnames = require('classnames');

var _classnames2 = _interopRequireDefault(_classnames);

var _reactCssThemr = require('react-css-themr');

var _Day = require('./Day');

var _Day2 = _interopRequireDefault(_Day);

var _Select = require('./Select');

var _Select2 = _interopRequireDefault(_Select);

var _moment = require('moment');

var _moment2 = _interopRequireDefault(_moment);

var _DateUtil = require('./utils/DateUtil');

var _DateUtil2 = _interopRequireDefault(_DateUtil);

var _Calendar = require('./styles/Calendar.css');

var _Calendar2 = _interopRequireDefault(_Calendar);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var omitList = ['weekNames', 'locale', 'selectedValue', 'today', 'currentPageDate', 'setcurrentPageDate', 'disabledDays', 'theme', 'calendarTheme', 'dayTheme', 'inactiveDays'];

var Calendar = (_dec = (0, _reactCssThemr.themr)('Calendar', _Calendar2.default), (0, _pure3.default)(_class = _dec(_class = (_temp = _class2 = function (_React$Component) {
  (0, _inherits3.default)(Calendar, _React$Component);

  function Calendar() {
    (0, _classCallCheck3.default)(this, Calendar);
    return (0, _possibleConstructorReturn3.default)(this, (Calendar.__proto__ || Object.getPrototypeOf(Calendar)).apply(this, arguments));
  }

  (0, _createClass3.default)(Calendar, [{
    key: 'renderByWeek',


    /**
    * renderByWeek(days)
    *
    * @input (array) days
    *
    * 以周為單位 render 一行七天。
    * 以 <Select> component 包 <Item> 為單選。
    *
    * @return (array) [monent] days
    *
    */
    value: function renderByWeek(days) {
      var _props = this.props,
          selectedValue = _props.selectedValue,
          today = _props.today,
          max = _props.max,
          min = _props.min,
          onChange = _props.onChange,
          disabledDays = _props.disabledDays,
          currentPageDate = _props.currentPageDate,
          inactiveDays = _props.inactiveDays,
          dayTheme = _props.dayTheme;


      var getDayKind = function getDayKind(day) {
        var d = (0, _moment2.default)(day).format('D');
        if (disabledDays.includes(d)) return 'disabled';else if (inactiveDays.includes(d)) return 'inactive';
        return 'default';
      };

      return (0, _jsx3.default)(_Select2.default, {
        onChange: onChange,
        selectedValue: (0, _moment2.default)(selectedValue),
        className: _Calendar2.default.weekWrap
      }, void 0, days.map(function (day) {
        return (0, _jsx3.default)(_Day2.default, {
          value: (0, _moment2.default)(day),
          today: (0, _moment2.default)(today),
          max: (0, _moment2.default)(max),
          min: (0, _moment2.default)(min),
          selectedValue: (0, _moment2.default)(selectedValue),
          currentPageDate: currentPageDate,
          theme: dayTheme,
          kind: getDayKind(day)
        }, (0, _moment2.default)(day).format());
      }));
    }

    /**
    * renderWeekNames
    *
    * @return Sun, Mon, Tue, Wed, Thu, Fri, Sat
    *
    */

  }, {
    key: 'renderWeekNames',
    value: function renderWeekNames() {
      var _this2 = this;

      /* set i18n */
      _moment2.default.locale(this.props.locale);
      var weekNames = this.props.weekNames || _moment2.default.weekdaysShort();

      return (0, _jsx3.default)('div', {
        className: _Calendar2.default.weekNameWrap
      }, void 0, weekNames.map(function (weekName, index) {
        return (0, _jsx3.default)('div', {
          className: (0, _classnames2.default)(_this2.props.theme.weekName, index === 0 && _this2.props.theme.sundayName)
        }, index, weekName);
      }));
    }

    /**
    * renderCalendarDisplay
    *
    * render 6 週。
    *
    */

  }, {
    key: 'renderCalendarDisplay',
    value: function renderCalendarDisplay() {
      var _this3 = this;

      var dateUtil = this.props.currentPageDate ? new _DateUtil2.default((0, _moment2.default)(this.props.currentPageDate), 42) : new _DateUtil2.default((0, _moment2.default)(this.props.selectedValue), 42);
      var daysPerWeek = dateUtil.getDaysPerWeek();

      return daysPerWeek.map(function (days, index) {
        return (0, _jsx3.default)('div', {}, index, _this3.renderByWeek(days));
      });
    }
  }, {
    key: 'render',
    value: function render() {
      return _react2.default.createElement(
        'div',
        (0, _extends3.default)({}, (0, _omit3.default)(omitList, this.props), { className: this.props.theme.base }),
        this.renderWeekNames(),
        this.renderCalendarDisplay()
      );
    }
  }]);
  return Calendar;
}(_react2.default.Component), _class2.propTypes = {
  selectedValue: _react.PropTypes.object.isRequired, /* could be Date object or moment object, need momentify */
  today: _react.PropTypes.object.isRequired, /* could be Date object or moment object, need momentify */
  max: _react.PropTypes.object.isRequired, /* could be Date object or moment object, need momentify */
  min: _react.PropTypes.object.isRequired, /* could be Date object or moment object, need momentify */
  onChange: _react.PropTypes.func.isRequired,
  locale: _react.PropTypes.string,
  currentPageDate: _react.PropTypes.object,
  weekNames: _react.PropTypes.arrayOf(_react.PropTypes.string),
  disabledDays: _react.PropTypes.arrayOf(_react.PropTypes.string),
  inactiveDays: _react.PropTypes.arrayOf(_react.PropTypes.string),
  theme: _react.PropTypes.object,
  dayTheme: _react.PropTypes.object
}, _class2.defaultProps = {
  today: new Date(), /* Today */
  max: new Date(), /* Today */
  min: new Date(-8640000000000000),
  locale: 'en',
  disabledDays: [],
  inactiveDays: []
}, _temp)) || _class) || _class);
exports.default = Calendar;
module.exports = exports['default'];