'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = undefined;

var _jsx2 = require('babel-runtime/helpers/jsx');

var _jsx3 = _interopRequireDefault(_jsx2);

var _extends2 = require('babel-runtime/helpers/extends');

var _extends3 = _interopRequireDefault(_extends2);

var _objectWithoutProperties2 = require('babel-runtime/helpers/objectWithoutProperties');

var _objectWithoutProperties3 = _interopRequireDefault(_objectWithoutProperties2);

var _classCallCheck2 = require('babel-runtime/helpers/classCallCheck');

var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);

var _createClass2 = require('babel-runtime/helpers/createClass');

var _createClass3 = _interopRequireDefault(_createClass2);

var _possibleConstructorReturn2 = require('babel-runtime/helpers/possibleConstructorReturn');

var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);

var _inherits2 = require('babel-runtime/helpers/inherits');

var _inherits3 = _interopRequireDefault(_inherits2);

var _omit2 = require('lodash/fp/omit');

var _omit3 = _interopRequireDefault(_omit2);

var _dec, _dec2, _dec3, _dec4, _class, _desc, _value, _class2, _class3, _temp;

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _reactDom = require('react-dom');

var _classnames = require('classnames');

var _classnames2 = _interopRequireDefault(_classnames);

var _pure = require('recompose/pure');

var _pure2 = _interopRequireDefault(_pure);

var _getContext = require('recompose/getContext');

var _getContext2 = _interopRequireDefault(_getContext);

var _withState = require('recompose/withState');

var _withState2 = _interopRequireDefault(_withState);

var _defaultProps = require('recompose/defaultProps');

var _defaultProps2 = _interopRequireDefault(_defaultProps);

var _throttle = require('core-decorators/lib/throttle');

var _throttle2 = _interopRequireDefault(_throttle);

var _EventListener = require('fbjs/lib/EventListener');

var _EventListener2 = _interopRequireDefault(_EventListener);

var _emptyFunction = require('fbjs/lib/emptyFunction');

var _emptyFunction2 = _interopRequireDefault(_emptyFunction);

var _emptyObject = require('fbjs/lib/emptyObject');

var _emptyObject2 = _interopRequireDefault(_emptyObject);

var _checkElementInWindowViewport = require('./utils/checkElementInWindowViewport');

var _checkElementInWindowViewport2 = _interopRequireDefault(_checkElementInWindowViewport);

var _removeEventListenerSafely = require('./utils/removeEventListenerSafely.js');

var _removeEventListenerSafely2 = _interopRequireDefault(_removeEventListenerSafely);

var _Image = require('./styles/Image.css');

var _Image2 = _interopRequireDefault(_Image);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _applyDecoratedDescriptor(target, property, decorators, descriptor, context) {
  var desc = {};
  Object['ke' + 'ys'](descriptor).forEach(function (key) {
    desc[key] = descriptor[key];
  });
  desc.enumerable = !!desc.enumerable;
  desc.configurable = !!desc.configurable;

  if ('value' in desc || desc.initializer) {
    desc.writable = true;
  }

  desc = decorators.slice().reverse().reduce(function (desc, decorator) {
    return decorator(target, property, desc) || desc;
  }, desc);

  if (context && desc.initializer !== void 0) {
    desc.value = desc.initializer ? desc.initializer.call(context) : void 0;
    desc.initializer = undefined;
  }

  if (desc.initializer === void 0) {
    Object['define' + 'Property'](target, property, desc);
    desc = null;
  }

  return desc;
}

/**
 * Image component with Lazy load
 * ref: http://w33ble.github.io/understanding-react/demos/lazy-load.html
 * @author Michael Hsu
 */

var omitList = ['focusedIndex', 'container', 'lazy', 'onPositionChange', 'onVisit', 'setIsVisted', 'index'];

function checkImageVisible(imageDOM) {
  var containerDOM = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;

  var isInViewport = void 0;

  if (containerDOM) {
    var containerRect = containerDOM.getBoundingClientRect();
    var imageRect = imageDOM.getBoundingClientRect();

    var isContainerInWindowViewport = (0, _checkElementInWindowViewport2.default)(containerDOM);
    var isImageInContainerViewport = imageRect.right > containerRect.left && imageRect.left < containerRect.right;

    isInViewport = isContainerInWindowViewport && isImageInContainerViewport;
  } else {
    var isImageInWindowViewport = (0, _checkElementInWindowViewport2.default)(imageDOM);

    isInViewport = isImageInWindowViewport;
  }

  return isInViewport;
}

// when disable lazy mode, always show the image.
var Image = (_dec = (0, _getContext2.default)({
  focusedIndex: _react.PropTypes.number
}), _dec2 = (0, _defaultProps2.default)({
  kind: 'default',
  container: _emptyFunction2.default,
  lazy: true,
  lazyProps: _emptyObject2.default,
  onPositionChange: _emptyFunction2.default,
  onVisit: _emptyFunction2.default,
  focusedIndex: -1
}), _dec3 = (0, _withState2.default)('isVisted', 'setIsVisted', function (props) {
  return !props.lazy;
}), _dec4 = (0, _throttle2.default)(), (0, _pure2.default)(_class = _dec(_class = _dec2(_class = _dec3(_class = (_class2 = (_temp = _class3 = function (_React$Component) {
  (0, _inherits3.default)(Image, _React$Component);

  function Image() {
    (0, _classCallCheck3.default)(this, Image);
    return (0, _possibleConstructorReturn3.default)(this, (Image.__proto__ || Object.getPrototypeOf(Image)).apply(this, arguments));
  }

  (0, _createClass3.default)(Image, [{
    key: 'componentDidMount',
    value: function componentDidMount() {
      var _this2 = this;

      var _props = this.props,
          lazy = _props.lazy,
          container = _props.container;


      if (lazy) {
        this.windowScrollListener = _EventListener2.default.listen(window, 'scroll', this.onImagePositionChange.bind(this));
        this.windowResizeListener = _EventListener2.default.listen(window, 'resize', this.onImagePositionChange.bind(this));

        /**
         * TODO: Wrapping `setTimout` fix for the situation that
         * if child want to reference to its parent while rendering
         * you will get `null` object.
         *
         * @author Michael Hsu
         */
        setTimeout(function () {
          if (container()) {
            _this2.containerScrollListener = _EventListener2.default.listen(container(), 'scroll', _this2.onImagePositionChange.bind(_this2));
            _this2.containerResizeListener = _EventListener2.default.listen(container(), 'resize', _this2.onImagePositionChange.bind(_this2));
          }
          _this2.onImagePositionChange();
        });
      }
    }
  }, {
    key: 'componentWillReceiveProps',
    value: function componentWillReceiveProps(nextProps) {
      var index = nextProps.index,
          focusedIndex = nextProps.focusedIndex,
          isVisted = nextProps.isVisted,
          onVisit = nextProps.onVisit,
          setIsVisted = nextProps.setIsVisted;


      if (!this.props.isVisted && isVisted) {
        onVisit(); /* callback */

        (0, _removeEventListenerSafely2.default)(this.containerScrollListener, this.containerResizeListener, this.windowScrollListener, this.windowResizeListener);
      } else if (!isVisted && index === focusedIndex) {
        /**
         * For the situation that `Image` cannot update by scroll or resize event listeners.
         * Taking `Gallery` & `Carousel` for exampe, parent component can directly pass focusedIndex as context
         * to set `Image` visited.
         */
        setIsVisted(true);
      }
    }
  }, {
    key: 'componentWillUnmount',
    value: function componentWillUnmount() {
      (0, _removeEventListenerSafely2.default)(this.containerScrollListener, this.containerResizeListener, this.windowScrollListener, this.windowResizeListener);
    }
  }, {
    key: 'onImagePositionChange',
    value: function onImagePositionChange() {
      var _props2 = this.props,
          container = _props2.container,
          setIsVisted = _props2.setIsVisted,
          onPositionChange = _props2.onPositionChange;


      var imageDOM = (0, _reactDom.findDOMNode)(this);
      var containerDOM = (0, _reactDom.findDOMNode)(container());

      if (checkImageVisible(imageDOM, containerDOM)) setIsVisted(true);

      onPositionChange(); /* callback */
    }
  }, {
    key: 'render',
    value: function render() {
      var _props3 = this.props,
          children = _props3.children,
          className = _props3.className,
          kind = _props3.kind,
          src = _props3.src,
          lazyProps = _props3.lazyProps,
          imgProps = _props3.imgProps,
          isVisted = _props3.isVisted,
          otherProps = (0, _objectWithoutProperties3.default)(_props3, ['children', 'className', 'kind', 'src', 'lazyProps', 'imgProps', 'isVisted']);


      return _react2.default.createElement(
        'div',
        (0, _extends3.default)({}, (0, _omit3.default)(omitList, otherProps), { className: (0, _classnames2.default)(_Image2.default.wrap, className) }),
        _react2.default.createElement('img', (0, _extends3.default)({}, imgProps, {
          className: _Image2.default[kind]
        }, isVisted && { src: src }, !isVisted && lazyProps)),
        children && (0, _jsx3.default)('div', {
          className: _Image2.default.mask
        }, void 0, ' ', children)
      );
    }
  }]);
  return Image;
}(_react2.default.Component), _class3.propTypes = {
  children: _react.PropTypes.node,
  className: _react.PropTypes.string,
  src: _react.PropTypes.string,
  kind: _react.PropTypes.oneOf(['cover', 'contain', 'default']),
  imgProps: _react.PropTypes.object,

  // For Gallery & Carousel usage
  container: _react.PropTypes.func, // (props) => DOM element

  // Lazy mode
  lazy: _react.PropTypes.bool,
  lazyProps: _react.PropTypes.object,

  // callback
  onPositionChange: _react.PropTypes.func,
  onVisit: _react.PropTypes.func,

  // Focus
  index: _react.PropTypes.number,
  focusedIndex: _react.PropTypes.number,

  // @withState
  isVisted: _react.PropTypes.bool,
  setIsVisted: _react.PropTypes.func
}, _temp), (_applyDecoratedDescriptor(_class2.prototype, 'onImagePositionChange', [_dec4], Object.getOwnPropertyDescriptor(_class2.prototype, 'onImagePositionChange'), _class2.prototype)), _class2)) || _class) || _class) || _class) || _class);
exports.default = Image;
module.exports = exports['default'];