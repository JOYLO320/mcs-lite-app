'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _extends2 = require('babel-runtime/helpers/extends');

var _extends3 = _interopRequireDefault(_extends2);

var _jsx2 = require('babel-runtime/helpers/jsx');

var _jsx3 = _interopRequireDefault(_jsx2);

var _objectWithoutProperties2 = require('babel-runtime/helpers/objectWithoutProperties');

var _objectWithoutProperties3 = _interopRequireDefault(_objectWithoutProperties2);

var _classCallCheck2 = require('babel-runtime/helpers/classCallCheck');

var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);

var _createClass2 = require('babel-runtime/helpers/createClass');

var _createClass3 = _interopRequireDefault(_createClass2);

var _possibleConstructorReturn2 = require('babel-runtime/helpers/possibleConstructorReturn');

var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);

var _inherits2 = require('babel-runtime/helpers/inherits');

var _inherits3 = _interopRequireDefault(_inherits2);

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _reactDom = require('react-dom');

var _EventListener = require('fbjs/lib/EventListener');

var _EventListener2 = _interopRequireDefault(_EventListener);

var _TooltipOverlay = require('../TooltipOverlay');

var _TooltipOverlay2 = _interopRequireDefault(_TooltipOverlay);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

exports.default = function (ComposedComponent) {
  var _class, _temp2;

  return _temp2 = _class = function (_React$Component) {
    (0, _inherits3.default)(WithTooltip, _React$Component);

    function WithTooltip() {
      var _ref;

      var _temp, _this, _ret;

      (0, _classCallCheck3.default)(this, WithTooltip);

      for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
        args[_key] = arguments[_key];
      }

      return _ret = (_temp = (_this = (0, _possibleConstructorReturn3.default)(this, (_ref = WithTooltip.__proto__ || Object.getPrototypeOf(WithTooltip)).call.apply(_ref, [this].concat(args))), _this), _this.state = {
        isTooltipShow: false
      }, _temp), (0, _possibleConstructorReturn3.default)(_this, _ret);
    }

    (0, _createClass3.default)(WithTooltip, [{
      key: 'componentDidMount',
      value: function componentDidMount() {
        if (!!this.props.tooltipProps) {
          this.mouseEnterListener = _EventListener2.default.listen((0, _reactDom.findDOMNode)(this), 'mouseenter', this.onMouseEnter.bind(this));
        }
      }
    }, {
      key: 'componentDidUpdate',
      value: function componentDidUpdate(prevProps) {
        if (!!this.props.tooltipProps === !!prevProps.tooltipProps) {
          return;
        } else if (!!this.props.tooltipProps) {
          this.mouseEnterListener = _EventListener2.default.listen((0, _reactDom.findDOMNode)(this), 'mouseenter', this.onMouseEnter.bind(this));
        } else {
          this.mouseEnterListener.remove();
        }
      }
    }, {
      key: 'componentWillUnmount',
      value: function componentWillUnmount() {
        if (this.mouseEnterListener) {
          this.mouseEnterListener.remove();
        }
      }
    }, {
      key: 'onMouseEnter',
      value: function onMouseEnter() {
        var _this2 = this;

        this.setState({ isTooltipShow: true });

        this.mouseleaveListener = _EventListener2.default.listen((0, _reactDom.findDOMNode)(this), 'mouseleave', function () {
          _this2.setState({ isTooltipShow: false });
          _this2.mouseleaveListener.remove();
        });
      }
    }, {
      key: 'render',
      value: function render() {
        var _this3 = this;

        var _props = this.props,
            tooltip = _props.tooltip,
            tooltipProps = _props.tooltipProps,
            otherProps = (0, _objectWithoutProperties3.default)(_props, ['tooltip', 'tooltipProps']);


        return _react2.default.createElement(
          ComposedComponent,
          otherProps,
          this.props.children,
          tooltipProps && (0, _jsx3.default)(_TooltipOverlay2.default, {
            show: this.state.isTooltipShow,
            container: tooltipProps.container,
            target: function target() {
              return (0, _reactDom.findDOMNode)(_this3);
            },
            placement: tooltipProps.placement
          }, void 0, tooltipProps.children || tooltip)
        );
      }
    }]);
    return WithTooltip;
  }(_react2.default.Component), _class.propTypes = {
    children: _react.PropTypes.node,
    tooltip: _react.PropTypes.node,
    tooltipProps: _react.PropTypes.shape((0, _extends3.default)({}, _TooltipOverlay2.default.propTypes))
  }, _temp2;
};

module.exports = exports['default'];