'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = undefined;

var _jsx2 = require('babel-runtime/helpers/jsx');

var _jsx3 = _interopRequireDefault(_jsx2);

var _extends2 = require('babel-runtime/helpers/extends');

var _extends3 = _interopRequireDefault(_extends2);

var _objectWithoutProperties2 = require('babel-runtime/helpers/objectWithoutProperties');

var _objectWithoutProperties3 = _interopRequireDefault(_objectWithoutProperties2);

var _classCallCheck2 = require('babel-runtime/helpers/classCallCheck');

var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);

var _createClass2 = require('babel-runtime/helpers/createClass');

var _createClass3 = _interopRequireDefault(_createClass2);

var _possibleConstructorReturn2 = require('babel-runtime/helpers/possibleConstructorReturn');

var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);

var _inherits2 = require('babel-runtime/helpers/inherits');

var _inherits3 = _interopRequireDefault(_inherits2);

var _omit2 = require('lodash/fp/omit');

var _omit3 = _interopRequireDefault(_omit2);

var _class, _class2, _temp2;

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _pureRenderDecorator = require('pure-render-decorator');

var _pureRenderDecorator2 = _interopRequireDefault(_pureRenderDecorator);

var _classnames = require('classnames');

var _classnames2 = _interopRequireDefault(_classnames);

var _Label = require('./Label');

var _Label2 = _interopRequireDefault(_Label);

var _FormMessage = require('./FormMessage');

var _FormMessage2 = _interopRequireDefault(_FormMessage);

var _emptyFunction = require('fbjs/lib/emptyFunction');

var _emptyFunction2 = _interopRequireDefault(_emptyFunction);

var _InputText = require('./styles/InputText.css');

var _InputText2 = _interopRequireDefault(_InputText);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var omitList = ['selectTextOnFocus', 'fitOnBlur', 'setvalue', 'leftpad', 'validations', 'debounceWait', 'setText', 'onSuccess', 'onLoading', 'onFail', 'defaultStatus', 'setStatus', 'setError', 'debounceValidations'];

var InputText = (0, _pureRenderDecorator2.default)(_class = (_temp2 = _class2 = function (_React$Component) {
  (0, _inherits3.default)(InputText, _React$Component);

  function InputText() {
    var _ref;

    var _temp, _this, _ret;

    (0, _classCallCheck3.default)(this, InputText);

    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    return _ret = (_temp = (_this = (0, _possibleConstructorReturn3.default)(this, (_ref = InputText.__proto__ || Object.getPrototypeOf(InputText)).call.apply(_ref, [this].concat(args))), _this), _this.onFocus = function (e) {
      var _this$props = _this.props,
          selectTextOnFocus = _this$props.selectTextOnFocus,
          onFocus = _this$props.onFocus;


      onFocus(e);

      if (selectTextOnFocus) e.target.select();
    }, _temp), (0, _possibleConstructorReturn3.default)(_this, _ret);
  }

  (0, _createClass3.default)(InputText, [{
    key: 'render',
    value: function render() {
      var _props = this.props,
          type = _props.type,
          focus = _props.focus,
          error = _props.error,
          className = _props.className,
          icon = _props.icon,
          style = _props.style,
          label = _props.label,
          required = _props.required,
          _props$labelProps = _props.labelProps,
          labelProps = _props$labelProps === undefined ? {} : _props$labelProps,
          _props$wrapperProps = _props.wrapperProps,
          wrapperProps = _props$wrapperProps === undefined ? {} : _props$wrapperProps,
          placement = _props.iconProps.placement,
          otherProps = (0, _objectWithoutProperties3.default)(_props, ['type', 'focus', 'error', 'className', 'icon', 'style', 'label', 'required', 'labelProps', 'wrapperProps', 'iconProps']);


      return _react2.default.createElement(
        'label',
        (0, _extends3.default)({}, wrapperProps, { className: (0, _classnames2.default)(_InputText2.default.wrapper, wrapperProps.className) }),
        label && _react2.default.createElement(
          _Label2.default,
          (0, _extends3.default)({}, labelProps, {
            required: required,
            className: (0, _classnames2.default)(labelProps.className, _InputText2.default.label) }),
          label
        ),
        icon && (0, _jsx3.default)('div', {
          className: _InputText2.default['iconWrapper' + placement]
        }, void 0, (0, _react.cloneElement)(icon, { className: (0, _classnames2.default)(icon.props.className, _InputText2.default.icon) })),
        _react2.default.createElement('input', (0, _extends3.default)({}, (0, _omit3.default)(omitList, otherProps), {
          type: type,
          ref: 'input',
          style: style,
          onFocus: this.onFocus,
          className: (0, _classnames2.default)(icon ? _InputText2.default['baseWithIcon' + placement] : _InputText2.default.base, focus && _InputText2.default.focus, error && _InputText2.default.error, className)
        })),
        error && typeof error !== 'boolean' && (0, _jsx3.default)(_FormMessage2.default, {
          kind: 'error',
          children: error
        })
      );
    }
  }]);
  return InputText;
}(_react2.default.Component), _class2.propTypes = {
  type: _react.PropTypes.string,
  icon: _react.PropTypes.node,
  iconProps: _react.PropTypes.shape({
    placement: _react.PropTypes.oneOf(['left', 'right'])
  }),
  focus: _react.PropTypes.bool,
  error: _react.PropTypes.oneOfType([_react.PropTypes.node, _react.PropTypes.bool]),
  className: _react.PropTypes.string,
  style: _react.PropTypes.object,
  label: _react.PropTypes.node,
  labelProps: _react.PropTypes.shape((0, _extends3.default)({}, _Label2.default.propTypes)),
  wrapperProps: _react.PropTypes.shape({
    className: _react.PropTypes.string
  }),
  selectTextOnFocus: _react.PropTypes.bool,
  onFocus: _react.PropTypes.func,
  required: _react.PropTypes.bool
}, _class2.defaultProps = {
  type: 'text',
  focus: false,
  error: false,
  selectTextOnFocus: false,
  onFocus: _emptyFunction2.default,
  iconProps: { placement: 'left' },
  required: false
}, _temp2)) || _class;

exports.default = InputText;
module.exports = exports['default'];