'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = undefined;

var _extends2 = require('babel-runtime/helpers/extends');

var _extends3 = _interopRequireDefault(_extends2);

var _jsx2 = require('babel-runtime/helpers/jsx');

var _jsx3 = _interopRequireDefault(_jsx2);

var _objectWithoutProperties2 = require('babel-runtime/helpers/objectWithoutProperties');

var _objectWithoutProperties3 = _interopRequireDefault(_objectWithoutProperties2);

var _classCallCheck2 = require('babel-runtime/helpers/classCallCheck');

var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);

var _createClass2 = require('babel-runtime/helpers/createClass');

var _createClass3 = _interopRequireDefault(_createClass2);

var _possibleConstructorReturn2 = require('babel-runtime/helpers/possibleConstructorReturn');

var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);

var _inherits2 = require('babel-runtime/helpers/inherits');

var _inherits3 = _interopRequireDefault(_inherits2);

var _class, _class2, _temp2;

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _reactDom = require('react-dom');

var _pureRenderDecorator = require('pure-render-decorator');

var _pureRenderDecorator2 = _interopRequireDefault(_pureRenderDecorator);

var _classnames = require('classnames');

var _classnames2 = _interopRequireDefault(_classnames);

var _toPercentage = require('./utils/toPercentage');

var _toPercentage2 = _interopRequireDefault(_toPercentage);

var _TooltipOverlay = require('./TooltipOverlay');

var _TooltipOverlay2 = _interopRequireDefault(_TooltipOverlay);

var _ControllableProgressbar = require('./styles/ControllableProgressbar.css');

var _ControllableProgressbar2 = _interopRequireDefault(_ControllableProgressbar);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var ControllableProgressbar = (0, _pureRenderDecorator2.default)(_class = (_temp2 = _class2 = function (_React$Component) {
  (0, _inherits3.default)(ControllableProgressbar, _React$Component);

  function ControllableProgressbar() {
    var _ref;

    var _temp, _this, _ret;

    (0, _classCallCheck3.default)(this, ControllableProgressbar);

    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    return _ret = (_temp = (_this = (0, _possibleConstructorReturn3.default)(this, (_ref = ControllableProgressbar.__proto__ || Object.getPrototypeOf(ControllableProgressbar)).call.apply(_ref, [this].concat(args))), _this), _this.state = {
      isTooltipShow: false,
      isMouseDown: false, /* When MouseDown display props' value otherwise current toolip's value */
      tooltipPositionRight: 0
    }, _temp), (0, _possibleConstructorReturn3.default)(_this, _ret);
  }

  (0, _createClass3.default)(ControllableProgressbar, [{
    key: 'getInputBackgroundImage',


    /**
    * getInputBackgroundImage()
    *
    * 取得 Input 漸層背景的設定。
    *
    * @returns {string} linear-gradient
    *
    * @author Michael Hsu
    */
    value: function getInputBackgroundImage() {
      var _props = this.props,
          start = _props.start,
          end = _props.end;
      var _props2 = this.props,
          value = _props2.value,
          _props2$preload = _props2.preload,
          preload = _props2$preload === undefined ? this.props.value : _props2$preload;


      var interval = end - start;

      value = (value - start) / interval;
      preload = (preload - start) / interval;

      /* 因 input 前後尾巴非線性，前半尾巴採進位法；後半尾巴採捨去法 */
      var valuePercentage = (0, _toPercentage2.default)(value, 0, value < 0.5 ? 'ceil' : 'floor');
      var preloadPercentage = (0, _toPercentage2.default)(preload, 0, preload < 0.5 ? 'ceil' : 'floor');

      return '\n      linear-gradient(to right,\n      #00A1DE 0%,\n      #00A1DE ' + valuePercentage + ',\n      #ABABAB ' + valuePercentage + ',\n      #ABABAB ' + preloadPercentage + ',\n      #D1D2D3 ' + preloadPercentage + ',\n      #D1D2D3 100%)\n    ';
    }

    /**
    * setTooltip(e)
    *
    * 設定 Tooltip 值與位置。
    * 注意：Input 左右兩側 各內縮 10px，因為放大 thumb，讓前後端無法對準圓心。
    * 微調不要超出 10=thumb 半徑
    *
    * @input {object} event e
    *
    * @author Michael Hsu
    */

  }, {
    key: 'setTooltip',
    value: function setTooltip(e) {
      var _props3 = this.props,
          start = _props3.start,
          end = _props3.end;


      var input = (0, _reactDom.findDOMNode)(this.refs.input);
      var mousePositionX = e.pageX; /* 滑鼠在頁面上的絕對位置 */
      var clientWidth = (document.documentElement || document.body).clientWidth; /* 目前 browser 寬度 */

      var tooltipValue = (mousePositionX - input.offsetLeft - 10) / (input.offsetWidth - 20) * (end - start) + start; /* 按滑鼠位置比例算出 */
      var tooltipPositionRight = clientWidth - mousePositionX;

      if (mousePositionX <= input.offsetLeft + 10) {
        tooltipPositionRight = clientWidth - input.offsetLeft - 10;
        tooltipValue = start; /* 起始 10 px 內直接為 start 值 */
      } else if (mousePositionX >= input.offsetLeft + input.offsetWidth - 10) {
        tooltipPositionRight = clientWidth - (input.offsetLeft + input.offsetWidth) + 10;
        tooltipValue = end; /* 末端 10 px 內直接為 end 值 */
      }

      this.setState({
        tooltipValue: tooltipValue,
        tooltipPositionRight: tooltipPositionRight
      });
    }
  }, {
    key: 'render',
    value: function render() {
      var _this2 = this;

      var _props4 = this.props,
          className = _props4.className,
          start = _props4.start,
          end = _props4.end,
          value = _props4.value,
          _onChange = _props4.onChange,
          defaultHover = _props4.defaultHover,
          displayFunc = _props4.displayFunc,
          tooltipWidth = _props4.tooltipWidth,
          otherProps = (0, _objectWithoutProperties3.default)(_props4, ['className', 'start', 'end', 'value', 'onChange', 'defaultHover', 'displayFunc', 'tooltipWidth']);
      var _state = this.state,
          isTooltipShow = _state.isTooltipShow,
          tooltipValue = _state.tooltipValue,
          tooltipPositionRight = _state.tooltipPositionRight,
          isMouseDown = _state.isMouseDown;


      return _react2.default.createElement(
        'div',
        (0, _extends3.default)({}, otherProps, {
          className: (0, _classnames2.default)(_ControllableProgressbar2.default.wrap, className),
          onMouseEnter: function onMouseEnter() {
            return _this2.setState({ isTooltipShow: true });
          },
          onMouseMove: this.setTooltip.bind(this),
          onMouseLeave: function onMouseLeave() {
            return _this2.setState({ isTooltipShow: false });
          },
          onMouseDown: function onMouseDown() {
            return _this2.setState({ isMouseDown: true });
          },
          onMouseUp: function onMouseUp() {
            return _this2.setState({ isMouseDown: false });
          }
        }),
        _react2.default.createElement('input', {
          ref: 'input',
          type: 'range',
          min: start,
          max: end,
          step: 'any',
          value: value,
          onChange: function onChange(e) {
            return _onChange(e, e.target.value);
          },
          onClick: function onClick(e) {
            return _onChange(e, e.target.value);
          },
          style: { backgroundImage: this.getInputBackgroundImage() },
          className: (0, _classnames2.default)(_ControllableProgressbar2.default.input, (defaultHover || isTooltipShow) && _ControllableProgressbar2.default.inputHover)
        }),
        (0, _jsx3.default)(_TooltipOverlay2.default, {
          show: isTooltipShow,
          target: function target() {
            return (0, _reactDom.findDOMNode)(_this2.refs.input);
          },
          placement: 'top',
          className: _ControllableProgressbar2.default.tooltip,
          style: {
            right: tooltipPositionRight,
            width: tooltipWidth,
            marginRight: -(tooltipWidth / 2) }
        }, void 0, isMouseDown ? displayFunc(value) : displayFunc(tooltipValue))
      );
    }
  }]);
  return ControllableProgressbar;
}(_react2.default.Component), _class2.propTypes = {
  className: _react.PropTypes.string,
  start: _react.PropTypes.number.isRequired,
  end: _react.PropTypes.number.isRequired,
  value: _react.PropTypes.number.isRequired,
  preload: _react.PropTypes.number,
  displayFunc: _react.PropTypes.func,
  onChange: _react.PropTypes.func.isRequired,
  defaultHover: _react.PropTypes.bool,
  tooltipWidth: _react.PropTypes.number
}, _class2.defaultProps = {
  start: 0,
  end: 0,
  value: 0,
  displayFunc: function displayFunc(value) {
    return value;
  },

  defaultHover: false,
  tooltipWidth: 82 }, _temp2)) || _class;

exports.default = ControllableProgressbar;
module.exports = exports['default'];