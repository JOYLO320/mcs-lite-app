'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _extends2 = require('babel-runtime/helpers/extends');

var _extends3 = _interopRequireDefault(_extends2);

var _jsx2 = require('babel-runtime/helpers/jsx');

var _jsx3 = _interopRequireDefault(_jsx2);

var _objectWithoutProperties2 = require('babel-runtime/helpers/objectWithoutProperties');

var _objectWithoutProperties3 = _interopRequireDefault(_objectWithoutProperties2);

var _classCallCheck2 = require('babel-runtime/helpers/classCallCheck');

var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);

var _createClass2 = require('babel-runtime/helpers/createClass');

var _createClass3 = _interopRequireDefault(_createClass2);

var _possibleConstructorReturn2 = require('babel-runtime/helpers/possibleConstructorReturn');

var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);

var _inherits2 = require('babel-runtime/helpers/inherits');

var _inherits3 = _interopRequireDefault(_inherits2);

var _mapProps2 = require('recompose/mapProps');

var _mapProps3 = _interopRequireDefault(_mapProps2);

var _defaultProps2 = require('recompose/defaultProps');

var _defaultProps3 = _interopRequireDefault(_defaultProps2);

var _pure2 = require('recompose/pure');

var _pure3 = _interopRequireDefault(_pure2);

var _compose2 = require('recompose/compose');

var _compose3 = _interopRequireDefault(_compose2);

var _class, _temp2;

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _classnames = require('classnames');

var _classnames2 = _interopRequireDefault(_classnames);

var _emptyFunction = require('fbjs/lib/emptyFunction');

var _emptyFunction2 = _interopRequireDefault(_emptyFunction);

var _emptyObject = require('fbjs/lib/emptyObject');

var _emptyObject2 = _interopRequireDefault(_emptyObject);

var _CopyButton = require('./CopyButton');

var _CopyButton2 = _interopRequireDefault(_CopyButton);

var _CodeBlock = require('./styles/CodeBlock.css');

var _CodeBlock2 = _interopRequireDefault(_CodeBlock);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var DEFAULT_CONFIG = {
  mode: 'jsx',
  theme: 'default',
  tabSize: 2,
  keyMap: 'sublime',
  lineNumbers: false,
  lineWrapping: true,
  matchTags: { bothTags: true },
  styleActiveLine: false,
  matchBrackets: true,
  autoCloseBrackets: true,
  autoCloseTags: true
};

/**
 * For server side render
 * ref: https://github.com/ForbesLindesay/react-code-mirror/blob/master/index.js
 *
 * @author Michael Hsu
 */

var CodeMirror = void 0;
var IS_SERVER = typeof navigator === 'undefined';
if (!IS_SERVER) {
  /**
   * addon options (require default) TODO: optimize bundle size
   */
  CodeMirror = require('codemirror');
  require('codemirror/addon/comment/comment');
  require('codemirror/keymap/sublime');
  require('codemirror/addon/display/placeholder');
  require('codemirror/addon/edit/matchtags');
  require('codemirror/addon/selection/active-line');
  require('codemirror/addon/edit/matchbrackets');
  require('codemirror/addon/edit/closebrackets');
  require('codemirror/addon/edit/closetag');
  require('codemirror/lib/codemirror.css');
}

// style


/**
 * Lazy load codemirror mode
 * @param {string} mode
 *
 * @author Michael Hsu
 */
function onModeChange(_ref) {
  var mode = _ref.mode,
      editor = _ref.editor;

  if (!mode) return;
  require('codemirror/mode/' + mode + '/' + mode + '.js');
  editor.setOption('mode', mode);
}

var CodeBlock = (_temp2 = _class = function (_React$Component) {
  (0, _inherits3.default)(CodeBlock, _React$Component);

  function CodeBlock() {
    var _ref2;

    var _temp, _this, _ret;

    (0, _classCallCheck3.default)(this, CodeBlock);

    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    return _ret = (_temp = (_this = (0, _possibleConstructorReturn3.default)(this, (_ref2 = CodeBlock.__proto__ || Object.getPrototypeOf(CodeBlock)).call.apply(_ref2, [this].concat(args))), _this), _this.onCopy = function () {
      return _this.props.onCopy(_this.editor.getValue());
    }, _this.getValue = function () {
      return _this.editor.getValue();
    }, _temp), (0, _possibleConstructorReturn3.default)(_this, _ret);
  }

  (0, _createClass3.default)(CodeBlock, [{
    key: 'componentDidMount',
    value: function componentDidMount() {
      var _this2 = this;

      if (IS_SERVER) return;

      this.editor = CodeMirror.fromTextArea(this.refs.textarea, this.props.config);
      this.editor.on('change', function () {
        return _this2.props.onChange(_this2.editor.getValue());
      });

      onModeChange({
        editor: this.editor,
        mode: this.props.config.mode
      });
    }
  }, {
    key: 'componentWillReceiveProps',
    value: function componentWillReceiveProps(nextProps) {
      if (this.props.config.mode !== nextProps.config.mode) {
        onModeChange({
          editor: this.editor,
          mode: nextProps.config.mode
        });
      }
      if (this.editor.getValue() !== nextProps.value) {
        this.editor.setValue(nextProps.value);
        this.editor.save(); // Copy the content of the editor into the textarea.
      }
    }
  }, {
    key: 'render',
    value: function render() {
      var _props = this.props,
          defaultValue = _props.defaultValue,
          children = _props.children,
          copy = _props.copy,
          readOnly = _props.readOnly,
          config = _props.config,
          className = _props.className,
          otherProps = (0, _objectWithoutProperties3.default)(_props, ['defaultValue', 'children', 'copy', 'readOnly', 'config', 'className']);


      return _react2.default.createElement(
        'div',
        (0, _extends3.default)({}, otherProps, { className: (0, _classnames2.default)(_CodeBlock2.default.wrap, config.lineNumbers && _CodeBlock2.default.lineNumbers, readOnly && _CodeBlock2.default.readOnly, className) }),
        _react2.default.createElement('textarea', { ref: 'textarea', defaultValue: children || defaultValue }),
        copy && (0, _jsx3.default)('div', {
          className: _CodeBlock2.default.mask
        }, void 0, (0, _jsx3.default)(_CopyButton2.default, {
          className: _CodeBlock2.default.button,
          onClick: this.onCopy,
          text: this.getValue
        }))
      );
    }
  }]);
  return CodeBlock;
}(_react2.default.Component), _class.propTypes = {
  children: _react.PropTypes.string,
  className: _react.PropTypes.string,
  defaultValue: _react.PropTypes.string,
  onChange: _react.PropTypes.func, // (value) => {}
  onCopy: _react.PropTypes.func, // (value) => {}
  copy: _react.PropTypes.bool,

  /**
   * CodeMirror Configuration
   * ref: http://codemirror.net/doc/manual.html#config
   */
  config: _react.PropTypes.object,
  readOnly: _react.PropTypes.bool,

  // @withState
  value: _react.PropTypes.string,
  setValue: _react.PropTypes.func
}, _temp2);
exports.default = (0, _compose3.default)(_pure3.default, (0, _defaultProps3.default)({
  config: _emptyObject2.default,
  readOnly: false,
  onChange: _emptyFunction2.default,
  onCopy: _emptyFunction2.default,
  copy: true
}), (0, _mapProps3.default)(function (props) {
  return (0, _extends3.default)({}, props, {
    config: (0, _extends3.default)({}, DEFAULT_CONFIG, {
      readOnly: props.readOnly && 'nocursor' }, props.config)
  });
}))(CodeBlock);
module.exports = exports['default'];