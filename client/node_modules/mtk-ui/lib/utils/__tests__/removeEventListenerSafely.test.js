'use strict';

var _jsx2 = require('babel-runtime/helpers/jsx');

var _jsx3 = _interopRequireDefault(_jsx2);

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _reactDom = require('react-dom');

var _ReactTestUtils = require('react/lib/ReactTestUtils');

var _ReactTestUtils2 = _interopRequireDefault(_ReactTestUtils);

var _EventListener = require('fbjs/lib/EventListener');

var _EventListener2 = _interopRequireDefault(_EventListener);

var _removeEventListenerSafely = require('../removeEventListenerSafely');

var _removeEventListenerSafely2 = _interopRequireDefault(_removeEventListenerSafely);

var _simulant = require('simulant');

var _simulant2 = _interopRequireDefault(_simulant);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

describe('utils/removeEventListenerSafely', function () {
  var onClickSpy = void 0;
  var node = void 0;
  var clickListener = void 0;

  beforeEach(function () {
    onClickSpy = sinon.spy();
    var instance = _ReactTestUtils2.default.renderIntoDocument((0, _jsx3.default)('div', {}));
    node = (0, _reactDom.findDOMNode)(instance);
    clickListener = _EventListener2.default.listen(node, 'click', onClickSpy);
  });

  it('should remove exactly listener', function () {
    _simulant2.default.fire(node, 'click');
    expect(onClickSpy).to.have.been.calledOnce;

    onClickSpy.reset();
    (0, _removeEventListenerSafely2.default)(clickListener);
    _simulant2.default.fire(node, 'click');
    expect(onClickSpy).to.have.not.been.called;
  });

  it('should remove one listeners and one fake undefined listener without error', function () {
    var fakeListener = undefined;

    _simulant2.default.fire(node, 'click');
    expect(onClickSpy).to.have.been.calledOnce;

    onClickSpy.reset();
    (0, _removeEventListenerSafely2.default)(clickListener, fakeListener);
    _simulant2.default.fire(node, 'click');
    expect(onClickSpy).to.have.not.been.called;
  });
});