'use strict';

var _getEventTargetFromPropsSafely = require('../getEventTargetFromPropsSafely');

var _getEventTargetFromPropsSafely2 = _interopRequireDefault(_getEventTargetFromPropsSafely);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

describe('utils/getEventTargetFromPropsSafely', function () {
  it('return null if there is no argument', function () {
    var result = (0, _getEventTargetFromPropsSafely2.default)();
    expect(result).to.be.null;
  });

  it('return null if there is no eventTarget in argument', function () {
    var result = (0, _getEventTargetFromPropsSafely2.default)({});
    expect(result).to.be.null;
  });

  it('return null if the eventTarget function return a falsy', function () {
    var result = (0, _getEventTargetFromPropsSafely2.default)({ eventTarget: function eventTarget() {
        return undefined;
      } });
    expect(result).to.be.null;

    var result2 = (0, _getEventTargetFromPropsSafely2.default)({ eventTarget: function eventTarget() {
        return false;
      } });
    expect(result2).to.be.null;

    var result3 = (0, _getEventTargetFromPropsSafely2.default)({ eventTarget: function eventTarget() {
        return null;
      } });
    expect(result3).to.be.null;
  });

  it('call the eventTarget function with props as argument', function () {
    var eventTarget = sinon.spy();
    var props = { eventTarget: eventTarget };
    (0, _getEventTargetFromPropsSafely2.default)(props);
    expect(eventTarget).to.have.been.calledWith(props);
  });

  it('return what the eventTarget function return', function () {
    var obj = {};
    var result = (0, _getEventTargetFromPropsSafely2.default)({ eventTarget: function eventTarget() {
        return obj;
      } });
    expect(result).to.be.equal(obj);
  });
});