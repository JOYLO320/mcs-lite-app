'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = undefined;

var _classCallCheck2 = require('babel-runtime/helpers/classCallCheck');

var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);

var _createClass2 = require('babel-runtime/helpers/createClass');

var _createClass3 = _interopRequireDefault(_createClass2);

var _moment = require('moment');

var _moment2 = _interopRequireDefault(_moment);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var DateUtil = function () {
  function DateUtil() {
    var date = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : new Date();
    var numberOfDays = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 42;
    (0, _classCallCheck3.default)(this, DateUtil);

    this.date = (0, _moment2.default)(date); /* could be Date object or moment object, need momentify */
    this.numberOfDays = numberOfDays;
  }

  /**
  * getDays
  *
  * 取得呈現出來中每天的日期，共 42 天。
  *
  * @input  (date or)
  *
  * @return (array) [moment] days
  *
  */


  (0, _createClass3.default)(DateUtil, [{
    key: 'getDays',
    value: function getDays() {
      var days = [];
      var firstDay = this.date.clone().subtract(this.date.get('date') - 1, 'day'); // 當月的第一天
      var firstWeekDay = firstDay.get('weekday'); // 當月的第一天星期幾

      /* 補齊上個月份 */
      for (var i = 0; i <= firstWeekDay; i++) {
        days[i] = firstDay.clone().subtract(firstWeekDay - i, 'days');
      }

      /* 當月份 以及 補齊下個月份 */
      for (var _i = firstWeekDay + 1; _i < this.numberOfDays; _i++) {
        days[_i] = firstDay.add(1, 'days').clone();
      }

      return days;
    }

    /**
    * getDaysPerWeek
    *
    * 依照周次排列，七天一週，共 6 週。
    *
    * @return (array) [array] daysPerWeek
    *
    */

  }, {
    key: 'getDaysPerWeek',
    value: function getDaysPerWeek() {
      var days = this.getDays();
      var numberOfWeeks = days.length / 7;
      var daysPerWeek = [];

      for (var i = 1; i <= numberOfWeeks; i++) {
        daysPerWeek.push(days.slice(7 * (i - 1), 7 * i));
      }

      return daysPerWeek;
    }
  }]);
  return DateUtil;
}();

exports.default = DateUtil;
module.exports = exports['default'];