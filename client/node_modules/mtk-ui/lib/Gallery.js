'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = undefined;

var _objectWithoutProperties2 = require('babel-runtime/helpers/objectWithoutProperties');

var _objectWithoutProperties3 = _interopRequireDefault(_objectWithoutProperties2);

var _extends2 = require('babel-runtime/helpers/extends');

var _extends3 = _interopRequireDefault(_extends2);

var _jsx2 = require('babel-runtime/helpers/jsx');

var _jsx3 = _interopRequireDefault(_jsx2);

var _classCallCheck2 = require('babel-runtime/helpers/classCallCheck');

var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);

var _createClass2 = require('babel-runtime/helpers/createClass');

var _createClass3 = _interopRequireDefault(_createClass2);

var _possibleConstructorReturn2 = require('babel-runtime/helpers/possibleConstructorReturn');

var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);

var _inherits2 = require('babel-runtime/helpers/inherits');

var _inherits3 = _interopRequireDefault(_inherits2);

var _omit2 = require('lodash/fp/omit');

var _omit3 = _interopRequireDefault(_omit2);

var _defaultProps2 = require('recompose/defaultProps');

var _defaultProps3 = _interopRequireDefault(_defaultProps2);

var _withContext2 = require('recompose/withContext');

var _withContext3 = _interopRequireDefault(_withContext2);

var _withPropsOnChange2 = require('recompose/withPropsOnChange');

var _withPropsOnChange3 = _interopRequireDefault(_withPropsOnChange2);

var _pure2 = require('recompose/pure');

var _pure3 = _interopRequireDefault(_pure2);

var _dec, _dec2, _dec3, _class, _class2, _temp;

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _reactDom = require('react-dom');

var _emptyFunction = require('fbjs/lib/emptyFunction');

var _emptyFunction2 = _interopRequireDefault(_emptyFunction);

var _classnames = require('classnames');

var _classnames2 = _interopRequireDefault(_classnames);

var _scrollBy = require('./utils/scrollBy');

var _scrollBy2 = _interopRequireDefault(_scrollBy);

var _MiChevronLeft = require('mtk-icon/lib/MiChevronLeft');

var _MiChevronLeft2 = _interopRequireDefault(_MiChevronLeft);

var _MiChevronRight = require('mtk-icon/lib/MiChevronRight');

var _MiChevronRight2 = _interopRequireDefault(_MiChevronRight);

var _MiImageGallery = require('mtk-icon/lib/MiImageGallery');

var _MiImageGallery2 = _interopRequireDefault(_MiImageGallery);

var _Image = require('./Image');

var _Image2 = _interopRequireDefault(_Image);

var _Gallery = require('./styles/Gallery.css');

var _Gallery2 = _interopRequireDefault(_Gallery);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var omitList = ['focusedIndex', 'onFocusChange', 'items', 'onLeftClick', 'onRightClick', 'hasItem'];

var itemFactory = (0, _react.createFactory)(_Image2.default);

var Gallery = (_dec = (0, _withContext3.default)({
  focusedIndex: _react.PropTypes.number.isRequired
}, function (props) {
  return {
    focusedIndex: props.focusedIndex
  };
}), _dec2 = (0, _defaultProps3.default)({
  onFocusChange: _emptyFunction2.default,
  onLeftClick: _emptyFunction2.default,
  onRightClick: _emptyFunction2.default
}), _dec3 = (0, _withPropsOnChange3.default)(['items', 'children'], function (props) {
  var items = props.items,
      children = props.children;

  return {
    hasItem: _react.Children.count(children) !== 0 || items.length !== 0
  };
}), (0, _pure3.default)(_class = _dec(_class = _dec2(_class = _dec3(_class = (_temp = _class2 = function (_React$Component) {
  (0, _inherits3.default)(Gallery, _React$Component);

  function Gallery() {
    (0, _classCallCheck3.default)(this, Gallery);
    return (0, _possibleConstructorReturn3.default)(this, (Gallery.__proto__ || Object.getPrototypeOf(Gallery)).apply(this, arguments));
  }

  (0, _createClass3.default)(Gallery, [{
    key: 'componentDidMount',
    value: function componentDidMount() {
      this.scrollIntoViewIfNeeded(this.props.focusedIndex);
    }
  }, {
    key: 'componentWillReceiveProps',
    value: function componentWillReceiveProps(nextProps) {
      this.scrollIntoViewIfNeeded(nextProps.focusedIndex);
    }
  }, {
    key: 'onControlClick',
    value: function onControlClick(direction) {
      var _props = this.props,
          children = _props.children,
          onLeftClick = _props.onLeftClick,
          onRightClick = _props.onRightClick;


      switch (direction) {
        case 'Left':
          var indexOfCurrentFirstItem = this.getIndexOfCurrentFirstItem();
          var isFirst = indexOfCurrentFirstItem === 0;
          if (!isFirst) {
            var index = indexOfCurrentFirstItem - 1;
            this.scrollEndAt(index);
            onLeftClick(index);
          }
          break;
        case 'Right':
          var indexOfCurrentLastItem = this.getIndexOfCurrentLastItem();
          var isLast = indexOfCurrentLastItem === _react.Children.count(children) - 1;
          if (!isLast) {
            var _index = indexOfCurrentLastItem + 1;
            this.scrollStartFrom(_index);
            onRightClick(_index);
          }
          break;
        default:
          break;
      }
    }
  }, {
    key: 'onItemClick',
    value: function onItemClick(e, index) {
      this.props.onFocusChange(e, index);
      this.scrollIntoViewIfNeeded(index);
    }

    /**
     * Get the first item of current display. 沒被切到的完整起點
     * @return {number} index - Index of component's children props.
     *
     * @author Michael Hsu
     */

  }, {
    key: 'getIndexOfCurrentFirstItem',
    value: function getIndexOfCurrentFirstItem() {
      var containerLeft = (0, _reactDom.findDOMNode)(this.refs.itemsWrap).getBoundingClientRect().left;

      return Array.from((0, _reactDom.findDOMNode)(this.refs.itemsWrap).children).findIndex(function (item) {
        return item.getBoundingClientRect().left >= containerLeft;
      });
    }

    /**
     * Same as getIndexOfCurrentFirstItem(), but return the last one. 沒被切到的完整結束點
     */

  }, {
    key: 'getIndexOfCurrentLastItem',
    value: function getIndexOfCurrentLastItem() {
      var containerRight = (0, _reactDom.findDOMNode)(this.refs.itemsWrap).getBoundingClientRect().right;

      // TODO: Enhance findIndex search algorithm，目前從頭開始 search
      return Array.from((0, _reactDom.findDOMNode)(this.refs.itemsWrap).children).findIndex(function (element, index, array) {
        // Use Math.round fixed for Safari.
        return Math.round(element.getBoundingClientRect().right) === Math.round(containerRight) || // 剛剛好最後一個
        array[index + 1].getBoundingClientRect().right > containerRight; // 檢查下一個了
      });
    }

    /**
     * 當點擊左右被切掉的 Item 時，自動將該 Item 完整地呈現出來
     * @param {number} [index] - Item index
     * @param {number} [tolerateRange = 1px] - 設定判斷切掉的容忍範圍值，避免往左往右滾來滾去
     */

  }, {
    key: 'scrollIntoViewIfNeeded',
    value: function scrollIntoViewIfNeeded(index) {
      var tolerateRange = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 1;

      if (!this.props.hasItem) return;

      var containerRect = (0, _reactDom.findDOMNode)(this.refs.itemsWrap).getBoundingClientRect();
      var itemRect = (0, _reactDom.findDOMNode)(this.refs.itemsWrap).children[index].getBoundingClientRect();

      if (itemRect.right >= containerRect.right + tolerateRange) {
        this.scrollStartFrom(index);
      } else if (containerRect.left - tolerateRange >= itemRect.left) {
        this.scrollEndAt(index);
      }
    }

    /**
     * 滾到以第 index 個 Item 為起始點。
     * @param {number} [index] - Item index
     */

  }, {
    key: 'scrollStartFrom',
    value: function scrollStartFrom(index) {
      var itemWrapNode = (0, _reactDom.findDOMNode)(this.refs.itemsWrap);
      var containerRect = itemWrapNode.getBoundingClientRect();
      var itemRect = itemWrapNode.children[index].getBoundingClientRect();
      var distanceOfXToMove = itemRect.left - containerRect.left;

      (0, _scrollBy2.default)(itemWrapNode)({ offsetX: distanceOfXToMove });
    }

    /**
     * 滾到以第 index 個 Item 為結束點。
     * @param {number} [index] - Item index
     */

  }, {
    key: 'scrollEndAt',
    value: function scrollEndAt(index) {
      var itemWrapNode = (0, _reactDom.findDOMNode)(this.refs.itemsWrap);
      var containerRect = itemWrapNode.getBoundingClientRect();
      var itemRect = itemWrapNode.children[index].getBoundingClientRect();
      var distanceOfXToMove = containerRect.right - itemRect.right;

      (0, _scrollBy2.default)(itemWrapNode)({ offsetX: -distanceOfXToMove });
    }
  }, {
    key: 'renderArrow',
    value: function renderArrow(direction) {
      var icon = void 0;

      switch (direction) {
        case 'Left':
          icon = (0, _jsx3.default)(_MiChevronLeft2.default, {
            className: _Gallery2.default.controlIcon
          });
          break;
        case 'Right':
          icon = (0, _jsx3.default)(_MiChevronRight2.default, {
            className: _Gallery2.default.controlIcon
          });
          break;
        default:
          break;
      }

      return icon;
    }
  }, {
    key: 'renderControl',
    value: function renderControl(direction) {
      return _react2.default.createElement(
        'div',
        (0, _extends3.default)({
          className: (0, _classnames2.default)(_Gallery2.default['control' + direction], !this.props.hasItem && _Gallery2.default.unclickable)
        }, this.props.hasItem && { onClick: this.onControlClick.bind(this, direction) }),
        this.renderArrow(direction)
      );
    }
  }, {
    key: 'renderItems',
    value: function renderItems() {
      var _this2 = this;

      var _props2 = this.props,
          children = _props2.children,
          _props2$items = _props2.items,
          items = _props2$items === undefined ? [] : _props2$items,
          focusedIndex = _props2.focusedIndex;


      var propsModifier = function propsModifier(props, index) {
        var focus = index === focusedIndex;
        return (0, _extends3.default)({}, props, {
          index: index,
          key: props.key || index,
          ref: focus && 'focus',
          container: function container() {
            return (0, _reactDom.findDOMNode)(_this2.refs.itemsWrap);
          },
          className: (0, _classnames2.default)(_Gallery2.default.child, focus && _Gallery2.default.focused, props.className),
          onClick: function onClick(e) {
            return _this2.onItemClick(e, index);
          }
        });
      };

      if (!this.props.hasItem) {
        return (0, _jsx3.default)('div', {
          className: _Gallery2.default.noImageWrap
        }, void 0, (0, _jsx3.default)(_MiImageGallery2.default, {
          className: _Gallery2.default.noImageIcon
        }), (0, _jsx3.default)('div', {}, void 0, 'No image yet.'));
      }

      return _react2.default.createElement(
        'div',
        { ref: 'itemsWrap', className: _Gallery2.default.itemsWrap },
        children ? _react.Children.map(children, function (child, index) {
          return (0, _react.cloneElement)(child, propsModifier(child.props, index));
        }) : items.map(function (props, index) {
          return itemFactory(propsModifier(props, index));
        })
      );
    }
  }, {
    key: 'render',
    value: function render() {
      var _props3 = this.props,
          children = _props3.children,
          className = _props3.className,
          otherProps = (0, _objectWithoutProperties3.default)(_props3, ['children', 'className']);


      return _react2.default.createElement(
        'div',
        (0, _extends3.default)({}, (0, _omit3.default)(omitList, otherProps), { className: (0, _classnames2.default)(_Gallery2.default.container, className) }),
        this.renderControl('Left'),
        this.renderItems(),
        this.renderControl('Right')
      );
    }
  }]);
  return Gallery;
}(_react2.default.Component), _class2.propTypes = {
  children: _react.PropTypes.node,
  items: _react.PropTypes.arrayOf(_react.PropTypes.shape((0, _extends3.default)({}, _Image2.default.PropTypes))),
  className: _react.PropTypes.string,

  /**
   * Only support Controlled component now
   */
  focusedIndex: _react.PropTypes.number.isRequired,
  onFocusChange: _react.PropTypes.func,

  /**
   * callback function
   */
  onLeftClick: _react.PropTypes.func, // (EndAtIndex) => {}
  onRightClick: _react.PropTypes.func, // (StartFromIndex) => {}

  // withPropsOnChange
  hasItem: _react.PropTypes.bool
}, _temp)) || _class) || _class) || _class) || _class);
exports.default = Gallery;
module.exports = exports['default'];