import { default as fs } from 'fs';
import { default as path } from 'path';
import { compose } from 'lodash';

// TODO: use native path.parse after upgrate to node ^0.12
import { default as pathParse } from 'parse-filepath';
import { default as uppercamelcase } from 'uppercamelcase';
import { default as SVGConvertor } from './SVGConvertor.js';
import { default as removeStringByBlacklist } from './removeStringByBlacklist.js';
import { default as toSingleLine } from './toSingleLine.js';
import { default as replaceClassName } from './replaceClassName.js';

export default function writeComponentFilesSync({ filenames, outDir, template, attrBlacklist: attrBlacklistPath }) {
  const templateGenerator = require(template);
  const attrBlacklist = require(attrBlacklistPath);

  filenames.forEach((filename) => {
    const basename = pathParse(filename).name;
    const componentName = uppercamelcase(basename.replace('icon_', 'Mi_'));
    const outputFilename = path.join(outDir, `./${componentName}.js`);
    const xml = fs.readFileSync(filename, 'utf-8');
    const svgConvertor = new SVGConvertor(xml);

    const component = templateGenerator({
      jsx: compose(
        toSingleLine,
        removeStringByBlacklist(attrBlacklist),
        replaceClassName,
      )(svgConvertor.toString()),

      viewBox: svgConvertor.getViewBox(),
      componentName,
    });

    fs.writeFileSync(outputFilename, component, 'utf-8');
  });
}
