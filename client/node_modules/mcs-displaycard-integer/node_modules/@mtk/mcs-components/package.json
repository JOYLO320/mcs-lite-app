{
  "_args": [
    [
      {
        "raw": "@mtk/mcs-components@https://cdn.mediatek.com/Mediatek-Cloud/mcs-components/2.1.10.tgz",
        "scope": "@mtk",
        "escapedName": "@mtk%2fmcs-components",
        "name": "@mtk/mcs-components",
        "rawSpec": "https://cdn.mediatek.com/Mediatek-Cloud/mcs-components/2.1.10.tgz",
        "spec": "https://cdn.mediatek.com/Mediatek-Cloud/mcs-components/2.1.10.tgz",
        "type": "remote"
      },
      "/Users/blue-mtk/mtk/mcs-lite-view/node_modules/mcs-displaycard-integer"
    ]
  ],
  "_from": "https://cdn.mediatek.com/Mediatek-Cloud/mcs-components/2.1.10.tgz",
  "_id": "@mtk/mcs-components@2.1.10",
  "_inCache": true,
  "_installable": true,
  "_location": "/mcs-displaycard-integer/@mtk/mcs-components",
  "_phantomChildren": {},
  "_requested": {
    "raw": "@mtk/mcs-components@https://cdn.mediatek.com/Mediatek-Cloud/mcs-components/2.1.10.tgz",
    "scope": "@mtk",
    "escapedName": "@mtk%2fmcs-components",
    "name": "@mtk/mcs-components",
    "rawSpec": "https://cdn.mediatek.com/Mediatek-Cloud/mcs-components/2.1.10.tgz",
    "spec": "https://cdn.mediatek.com/Mediatek-Cloud/mcs-components/2.1.10.tgz",
    "type": "remote"
  },
  "_requiredBy": [
    "/mcs-displaycard-integer"
  ],
  "_resolved": "https://cdn.mediatek.com/Mediatek-Cloud/mcs-components/2.1.10.tgz",
  "_shasum": "2c2e72a924e3d824279b7723d6bc600086f8ef1b",
  "_shrinkwrap": null,
  "_spec": "@mtk/mcs-components@https://cdn.mediatek.com/Mediatek-Cloud/mcs-components/2.1.10.tgz",
  "_where": "/Users/blue-mtk/mtk/mcs-lite-view/node_modules/mcs-displaycard-integer",
  "author": {
    "name": "mediatek"
  },
  "bugs": {
    "url": "https://github.com/Mediatek-Cloud/mtk-core/issues"
  },
  "dependencies": {
    "bootstrap-styl": "^5.0.1",
    "classnames": "^2.2.3",
    "fbjs": "^0.4.0",
    "i18next-client": "^1.11.1",
    "lodash": "^3.10.0",
    "lodash.assign": "^3.1.0",
    "moment": "^2.11.2",
    "radium": "^0.15.3",
    "react-bootstrap": "^0.28.1",
    "react-cookie": "^0.4.2",
    "react-ga": "^1.2.0",
    "react-google-maps": "^4.7.2",
    "react-socket": "^0.1.4",
    "react-style": "github:mediatek-cloud/react-style",
    "reacthtmlpack": "1.2.0",
    "recompose": "^0.14.4",
    "socket.io-client": "^1.4.5"
  },
  "description": "``` $ npm i @mtk/mcs-components ```",
  "devDependencies": {
    "autoprefixer": "^6.1.1",
    "autoprefixer-loader": "^3.1.0",
    "babel": "5.8.x",
    "babel-core": "5.8.x",
    "babel-eslint": "4.1.x",
    "babel-loader": "5.3.x",
    "babel-plugin-react-transform": "1.1.x",
    "css-loader": "^0.23.0",
    "eslint": "^1.8.0",
    "eslint-config-defaults": "^7.1.1",
    "eslint-plugin-react": "^3.6.3",
    "extract-text-webpack-plugin": "^0.9.1",
    "file-loader": "^0.8.4",
    "font-awesome": "^4.3.0",
    "font-awesome-webpack": "^0.0.3",
    "html-loader": "^0.4.0",
    "jest-cli": "^0.8.0",
    "json-loader": "^0.5.4",
    "mcs-videostream": "http://bamboo.mediatek.inc/packages/mcs-videostream/0.0.24.tgz",
    "mtk-icon": "http://bamboo.mediatek.inc/packages/mtk-icon/0.0.11.tgz",
    "mtk-ui": "http://bamboo.mediatek.inc/packages/mtk-ui/2.1.8.tgz",
    "nodemon": "^1.3.7",
    "postcss": "^5.0.12",
    "postcss-input-style": "^0.3.0",
    "postcss-loader": "^0.8.0",
    "pre-commit": "github:mediatek-cloud/pre-commit",
    "react": "^0.14.0",
    "react-dom": "^0.14.3",
    "react-hot-loader": "^1.2.5",
    "react-transform-catch-errors": "^1.0.2",
    "react-transform-hmr": "^1.0.4",
    "redbox-react": "^1.2.2",
    "style-loader": "^0.13.0",
    "stylus-loader": "^1.4.2",
    "url-loader": "^0.5.7",
    "webpack": "^1.12.6",
    "webpack-config": "^2.3.0",
    "webpack-dev-middleware": "^1.4.0",
    "webpack-hot-middleware": "^2.5.0"
  },
  "engineStrict": true,
  "engines": {
    "node": ">= 4.2.2",
    "npm": ">= 2.14.7"
  },
  "homepage": "https://github.com/Mediatek-Cloud/mtk-core#readme",
  "jest": {
    "scriptPreprocessor": "<rootDir>/node_modules/babel-jest",
    "testPathDirs": [
      "__tests__"
    ],
    "testFileExtensions": [
      "jsx",
      "js"
    ],
    "moduleFileExtensions": [
      "js",
      "json",
      "jsx"
    ],
    "unmockedModulePathPatterns": [
      "<rootDir>/node_modules/react"
    ]
  },
  "keywords": [
    "mediatek"
  ],
  "license": "ISC",
  "main": "lib/index.js",
  "name": "@mtk/mcs-components",
  "optionalDependencies": {},
  "pre-commit": [
    "lint"
  ],
  "private": true,
  "readme": "## Install\n\n```\n$ npm i @mtk/mcs-components\n```\n\n## To Use\n### `webpack.config.js` 必須設定 font-awsome-webpack 和 json 檔的 loader，例如：\n\n```\nmodule: {\n  loaders: [\n    { test: /\\.woff(2)?(\\?v=[0-9]\\.[0-9]\\.[0-9])?$/, loader: 'url?limit=10000&minetype=application/font-woff' },\n    { test: /\\.(ttf|eot|otf)(\\?v=[0-9]\\.[0-9]\\.[0-9])?$/, loader: 'url?limit=10000&minetype=application/font-woff' },\n    { test: /\\.svg\\?v=[0-9]\\.[0-9]\\.[0-9]$/, loader: 'url?limit=10000&minetype=application/font-woff' },\n    { test: /\\.(svg|png|jpg|jpeg)$/, loader: 'url?limit=10000&name=[name].[ext]' },\n    { test: /\\.json$/, loaders: ['json'] }\n  ]\n}\n```\n\n### `babel/polyfill` 補上瀏覽器支援度問題，記得在專案 entry.js 加上：\n\n```\n// babel polyfill ref: https://github.com/babel/babel/issues/711\nrequire('babel/polyfill');\n```\n\n\n## Example\n\n```\n# ./mcs-components/emxaple/\n$ npm i\n$ npm run example:watch\n```\n\n## Develop & Build components\n\n```\n# ./mcs-components/\n$ npm i\n$ npm run example:watch\n\n# develop ... ing ... end\n\n$ npm run build\n\n# .. create your mcs-component in ./src/js\n# display in ./index.html ./entry.js\n```\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/Mediatek-Cloud/mtk-core.git"
  },
  "scripts": {
    "build": "babel src --out-dir lib && npm run copyStyle",
    "clean": "rm -r -f lib/*",
    "copy": "cp -avR src/img lib/img && cp -avR src/configs lib/configs && cp -avR src/locales lib/locales",
    "copyStyle": "find ./src/ -iname '*.css' > file.log; cat file.log | while read from ; do to=$(echo $from | sed 's/src/lib/g'); mkdir -p `dirname $to` ; cp -avR $from $to; done; rm -rf ./file.log;",
    "example:build:china": " NODE_ENV=production  DOMAIN_ENV=china  webpack --config example/webpack.config.js",
    "example:build:global": "NODE_ENV=production  DOMAIN_ENV=global webpack --config example/webpack.config.js",
    "example:watch:china": " NODE_ENV=development DOMAIN_ENV=china  npm run example:watch:common",
    "example:watch:common": "reacthtmlpack devServer example/webpack.config.js ./example/build ./example/views/index.html.js",
    "example:watch:global": "NODE_ENV=development DOMAIN_ENV=global npm run example:watch:common",
    "lint": "eslint ./",
    "prebuild": "npm run clean && npm run copy",
    "test": "BABEL_JEST_STAGE=0 jest",
    "test:watch": "nodemon -w __tests__ -e js,jsx -x npm test"
  },
  "version": "2.1.10"
}
