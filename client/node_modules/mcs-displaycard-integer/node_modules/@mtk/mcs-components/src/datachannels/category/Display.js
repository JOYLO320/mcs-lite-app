import { default as React, PropTypes } from 'react';
import { compose, pure, setPropTypes, defaultProps, mapPropsOnChange } from 'recompose';
import { default as elementStyle } from '../common/card/styles/base.css';
import { default as KeyValueElement } from '../common/keyValueElement';
import { default as styles } from '../switch/styles/main.css';
import { default as c } from 'classnames';
import { adjustFormatStatus } from '../common/Utils';

const display = ({ format, displayType }) => (
  <div className={c(elementStyle.base, elementStyle[displayType], styles.displayBase )}>
    {format.map((key, index) => <KeyValueElement key={index} {...key} className={styles.key} />)}
  </div>
);

export const propTypes = {
  numberOfCategory: PropTypes.number.isRequired,
  displayType: PropTypes.oneOf(['none', 'preview', 'embeded']),
  status: PropTypes.object,
  format: PropTypes.array.isRequired,
};

export default compose(
  defaultProps({
    status: { value: '0' },
    displayType: 'none',
    numberOfCategory: 2,
  }),
  setPropTypes(propTypes),
  pure,
  mapPropsOnChange(['status', 'format'], props => {
    const { status, format } = props;
    const newFormat = adjustFormatStatus(format, status.value);
    return {
      ...props,
      format: newFormat,
    };
  }),
)(display);
