'use strict';

Object.defineProperty(exports, '__esModule', {
  value: true
});

var _createClass = (function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ('value' in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; })();

var _get = function get(_x, _x2, _x3) { var _again = true; _function: while (_again) { var object = _x, property = _x2, receiver = _x3; _again = false; if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { _x = parent; _x2 = property; _x3 = receiver; _again = true; desc = parent = undefined; continue _function; } } else if ('value' in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } } };

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj['default'] = obj; return newObj; } }

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError('Cannot call a class as a function'); } }

function _inherits(subClass, superClass) { if (typeof superClass !== 'function' && superClass !== null) { throw new TypeError('Super expression must either be null or a function, not ' + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _radium = require('radium');

var _radium2 = _interopRequireDefault(_radium);

var _reactCookie = require('react-cookie');

var _reactCookie2 = _interopRequireDefault(_reactCookie);

var _utilsUserVoice = require('./utils/UserVoice');

var _utilsUserVoice2 = _interopRequireDefault(_utilsUserVoice);

var _utilsUserReport = require('./utils/UserReport');

var _utilsUserReport2 = _interopRequireDefault(_utilsUserReport);

var _utilsI18n = require('./utils/i18n');

var I18n = _interopRequireWildcard(_utilsI18n);

var _utilsStyleMerger = require('./utils/styleMerger');

var _utilsStyleMerger2 = _interopRequireDefault(_utilsStyleMerger);

var _utilsGetLocaleJs = require('./utils/getLocale.js');

var _utilsGetLocaleJs2 = _interopRequireDefault(_utilsGetLocaleJs);

var _NavItem = require('./NavItem');

var _NavItem2 = _interopRequireDefault(_NavItem);

var _Nav = require('./Nav');

var _Nav2 = _interopRequireDefault(_Nav);

var _DropdownButton = require('./DropdownButton');

var _DropdownButton2 = _interopRequireDefault(_DropdownButton);

var _DropdownButtonVertical = require('./DropdownButtonVertical');

var _DropdownButtonVertical2 = _interopRequireDefault(_DropdownButtonVertical);

var _configsResources = require('./configs/resources');

var _configsResources2 = _interopRequireDefault(_configsResources);

var _configsLanguagesJson = require('./configs/languages.json');

var _configsLanguagesJson2 = _interopRequireDefault(_configsLanguagesJson);

var _configsUserVoiceJson = require('./configs/userVoice.json');

var _configsUserVoiceJson2 = _interopRequireDefault(_configsUserVoiceJson);

var _configsUserReportJson = require('./configs/userReport.json');

var _configsUserReportJson2 = _interopRequireDefault(_configsUserReportJson);

var _imgWeb_logoPng = require('./img/web_logo.png');

var _imgWeb_logoPng2 = _interopRequireDefault(_imgWeb_logoPng);

var Header = (function (_React$Component) {
  _inherits(Header, _React$Component);

  function Header(props) {
    _classCallCheck(this, Header);

    _get(Object.getPrototypeOf(Header.prototype), 'constructor', this).call(this, props);
    this.state = {
      isChina: false
    };
  }

  _createClass(Header, [{
    key: 'componentWillMount',
    value: function componentWillMount() {
      var _this = this;

      // 取得現在網址代表的語言
      var i18nPrefix = (0, _utilsGetLocaleJs2['default'])(window.location.href);

      var basePath = '' + (window.location.origin + '/') + (_configsResources2['default'].base + '/') + (i18nPrefix ? i18nPrefix + '/' : '') + (_configsResources2['default'].version + '/');

      var rootPath = '' + (window.location.origin + '/') + (i18nPrefix ? i18nPrefix + '/' : '');

      var isChina = /\.cn$/.test(window.location.hostname);
      if (isChina) {
        // UserReport 設定
        this.userReport = new _utilsUserReport2['default']({
          API_KEY: require('./configs/userReport.json').API_KEY
        }).setup();
        this.setState({ isChina: true });
      } else {
        // UserVoice 設定
        this.userVoice = new _utilsUserVoice2['default']({
          target: '#feedbackUserVoice',
          locale: i18nPrefix,
          API_KEY: _configsUserVoiceJson2['default'].API_KEY,
          API_KEY: require('./configs/userVoice.json').API_KEY
        }).setup();
      }

      // 以 cookie 'token' 來判斷是否為登入狀態。
      var isLogin = _reactCookie2['default'].load('token') ? true : false;

      // i18n 設定
      I18n.setup({
        lng: i18nPrefix
      }).then(function (i18n) {
        _this.setState({ i18n: i18n.t });
      })['catch'](function (error) {
        console.log(error);
      });

      // Media Query
      var mql = window.matchMedia('(max-width: 767px)');
      mql.addListener(this._handleMediaQueryChange.bind(this));

      this.setState({
        resourcesList: _configsResources2['default'].resourcesList,
        helpList: _configsResources2['default'].helpList,
        languageList: _configsLanguagesJson2['default'].langhageList,
        i18nPrefix: i18nPrefix,
        currentLanguage: this._getCurrentLanguage(i18nPrefix),
        basePath: this._adjustPathLocale(basePath),
        rootPath: this._adjustPathLocale(rootPath),
        v2consolePath: this._adjustPathLocale('/v2console/' + i18nPrefix),
        isLogin: isLogin,
        isMobileMode: mql.matches ? true : false,
        isNavbarClicked: false,
        i18n: function i18n(text) {
          return text;
        }
      });
    }
  }, {
    key: 'render',
    value: function render() {
      var _this2 = this;

      return _react2['default'].createElement(
        'header',
        { style: styles.header },
        _react2['default'].createElement(
          'div',
          { style: [styles.container, this.state.isMobileMode && { boxShadow: '1px 2px 1px 0 rgba(0,0,0,0.1), 0 0 0 rgba(0,0,0,0.1)' }] },
          _react2['default'].createElement(
            _Nav2['default'],
            null,
            _react2['default'].createElement(
              _NavItem2['default'],
              { href: this.state.rootPath,
                linkStyle: styles.logoLink
              },
              _react2['default'].createElement('img', {
                src: _imgWeb_logoPng2['default'],
                alt: 'logo',
                style: styles.logo
              })
            ),
            this.state.isChina && _react2['default'].createElement(
              _NavItem2['default'],
              { href: 'http://ns.csip.cn/',
                target: '_blank',
                linkStyle: styles.logoLink
              },
              _react2['default'].createElement('img', {
                src: require('./img/csip_logo.png'),
                alt: 'csip',
                style: (0, _utilsStyleMerger2['default'])(styles.logo, { width: 105 })
              })
            )
          ),
          _react2['default'].createElement(
            _Nav2['default'],
            { style: (0, _utilsStyleMerger2['default'])(this.state.isMobileMode && { display: 'none' }, { float: 'right' }) },
            _react2['default'].createElement(
              _DropdownButton2['default'],
              {
                buttonStyle: (0, _utilsStyleMerger2['default'])(styles.link, this._isMenuActive('resourcesList') && styles.activeStyle),
                activeStyle: styles.activeStyle,
                title: _react2['default'].createElement(
                  'span',
                  null,
                  _react2['default'].createElement('i', { className: 'fa fa-inbox', style: styles.prefixIcon }),
                  this.state.i18n('Resources')
                )
              },
              this.state.resourcesList.map(function (entry, index, array) {
                return _react2['default'].createElement(
                  _NavItem2['default'],
                  { key: index, href: entry.path.startsWith('http') ? entry.path : _this2.state.basePath + entry.path,
                    style: [styles.menuItem, _this2._isItemActive(entry.path) ? styles.menuItemActive : {}, array.length === index + 1 ? { borderRadius: '0 0 4px 4px' } : {}],
                    linkStyle: styles.menuLink,
                    activeStyle: (0, _utilsStyleMerger2['default'])(styles.menuItemActive, array.length === index + 1 ? { borderRadius: '0 0 4px 4px' } : {})
                  },
                  _this2.state.i18n(entry.name)
                );
              })
            ),
            _react2['default'].createElement(
              _DropdownButton2['default'],
              {
                id: !this.state.isMobileMode && 'feedbackUserVoice',
                buttonStyle: (0, _utilsStyleMerger2['default'])(styles.link, this._isMenuActive('helpList') && styles.activeStyle),
                activeStyle: styles.activeStyle,
                title: _react2['default'].createElement(
                  'span',
                  null,
                  _react2['default'].createElement('i', { className: 'fa fa-comments-o', style: styles.prefixIcon }),
                  this.state.i18n('Help')
                )
              },
              this.state.helpList.map(function (entry, index) {
                return _react2['default'].createElement(
                  _NavItem2['default'],
                  { key: index, href: '' + _this2.state.basePath + entry.path,
                    style: [styles.menuItem, _this2._isItemActive(entry.path) ? styles.menuItemActive : {}],
                    linkStyle: styles.menuLink,
                    activeStyle: styles.menuItemActive
                  },
                  _this2.state.i18n(entry.name)
                );
              }),
              _react2['default'].createElement(
                _NavItem2['default'],
                { key: 'Forum',
                  href: 'http://labs.mediatek.com/forums/forums/show/48.page',
                  target: '_blank',
                  style: styles.menuItem,
                  linkStyle: styles.menuLink,
                  activeStyle: styles.menuItemActive
                },
                this.state.i18n('Forum')
              ),
              _react2['default'].createElement(
                _NavItem2['default'],
                { key: 'Feedback',
                  onClick: this._handleFeedbackClick.bind(this),
                  style: styles.menuItem,
                  linkStyle: styles.menuLink,
                  activeStyle: (0, _utilsStyleMerger2['default'])(styles.menuItemActive, { borderRadius: '0 0 4px 4px' })
                },
                this.state.i18n('Feedback')
              )
            ),
            _react2['default'].createElement(
              _DropdownButton2['default'],
              {
                buttonStyle: styles.link,
                activeStyle: styles.activeStyle,
                activeLinkStyle: styles.activeStyle,
                title: _react2['default'].createElement(
                  'span',
                  null,
                  _react2['default'].createElement('i', { className: 'fa fa-globe', style: styles.prefixIcon }),
                  this.state.currentLanguage
                )
              },
              this.state.languageList.map(function (entry, index, array) {
                return _react2['default'].createElement(
                  _NavItem2['default'],
                  { key: index,
                    onClick: function (e) {
                      return _this2._handleSelectLanguage(entry.ISO);
                    },
                    style: [styles.menuItem, entry.name === _this2.state.currentLanguage ? styles.menuItemActive : {}, array.length === index + 1 ? { borderRadius: '0 0 4px 4px' } : {}],
                    linkStyle: styles.menuLink,
                    activeStyle: (0, _utilsStyleMerger2['default'])(styles.menuItemActive, array.length === index + 1 ? { borderRadius: '0 0 4px 4px' } : {})
                  },
                  _this2.state.i18n(entry.name)
                );
              })
            ),
            _react2['default'].createElement(
              _NavItem2['default'],
              { href: this.state.isLogin ? this.state.v2consolePath : '/oauth/' + (this.state.i18nPrefix ? this.state.i18nPrefix + '/' : '') + 'login',
                style: styles.item,
                linkStyle: styles.link,
                activeStyle: styles.activeStyle,
                activeLinkStyle: styles.activeStyle
              },
              this.state.isLogin ? this.state.i18n('Return to Console') : this.state.i18n('Sign in / Register now')
            )
          ),
          _react2['default'].createElement(
            _Nav2['default'],
            { style: (0, _utilsStyleMerger2['default'])(!this.state.isMobileMode && { display: 'none' }, { float: 'right' }),
              onClick: this._handleNavbarClick.bind(this)
            },
            _react2['default'].createElement(_DropdownButton2['default'], {
              arrowIcon: false,
              buttonStyle: styles.link,
              title: _react2['default'].createElement(
                'span',
                null,
                _react2['default'].createElement('i', { className: 'fa fa-bars',
                  style: [styles.navbar, this.state.isNavbarClicked && { display: 'none' }] }),
                _react2['default'].createElement('i', { className: 'fa fa-close',
                  style: [styles.navbar, !this.state.isNavbarClicked && { display: 'none' }] })
              )
            })
          )
        ),
        _react2['default'].createElement(
          'ul',
          { style: [this.state.isMobileMode && this.state.isNavbarClicked ? styles.tabletsShow : styles.tabletsHide, styles.tablets.ul] },
          _react2['default'].createElement(
            _DropdownButtonVertical2['default'],
            {
              buttonStyle: (0, _utilsStyleMerger2['default'])(styles.link, styles.linkVertical, this._isMenuActive('resourcesList') && styles.activeStyle),
              activeStyle: styles.activeStyle,
              title: _react2['default'].createElement(
                'span',
                { style: styles.dropDownTextVertical },
                this.state.i18n('Resources')
              )
            },
            this.state.resourcesList.map(function (entry, index) {
              return _react2['default'].createElement(
                _NavItem2['default'],
                { key: index,
                  onClick: function (e) {
                    return _this2._handleGotoPage(entry.path.startsWith('http') ? entry.path : _this2.state.basePath + entry.path);
                  },
                  style: [styles.menuItemVertical, _this2._isItemActive(entry.path) ? styles.menuItemActive : {}],
                  linkStyle: styles.menuLink,
                  activeStyle: styles.menuItemActive
                },
                _this2.state.i18n(entry.name)
              );
            })
          ),
          _react2['default'].createElement(
            _DropdownButtonVertical2['default'],
            {
              id: this.state.isMobileMode && 'feedbackUserVoice',
              buttonStyle: (0, _utilsStyleMerger2['default'])(styles.link, styles.linkVertical, this._isMenuActive('helpList') && styles.activeStyle),
              activeStyle: styles.activeStyle,
              title: _react2['default'].createElement(
                'span',
                { style: styles.dropDownTextVertical },
                this.state.i18n('Help')
              )
            },
            this.state.helpList.map(function (entry, index) {
              return _react2['default'].createElement(
                _NavItem2['default'],
                { key: index,
                  onClick: function (e) {
                    return _this2._handleGotoPage('' + _this2.state.basePath + entry.path);
                  },
                  style: [styles.menuItemVertical, _this2._isItemActive(entry.path) ? styles.menuItemActive : {}],
                  linkStyle: styles.menuLink,
                  activeStyle: styles.menuItemActive
                },
                _this2.state.i18n(entry.name)
              );
            }),
            _react2['default'].createElement(
              _NavItem2['default'],
              { key: 'Forum',
                onClick: function (e) {
                  return _this2._handleGotoPage('http://labs.mediatek.com/forums/forums/show/48.page', '_blank');
                },
                style: styles.menuItemVertical,
                linkStyle: styles.menuLink,
                activeStyle: styles.menuItemActive
              },
              this.state.i18n('Forum')
            ),
            _react2['default'].createElement(
              _NavItem2['default'],
              { key: 'Feedback',
                onClick: this._handleFeedbackClick.bind(this),
                style: styles.menuItemVertical,
                linkStyle: styles.menuLink,
                activeStyle: styles.menuItemActive
              },
              this.state.i18n('Feedback')
            )
          ),
          _react2['default'].createElement(
            _DropdownButtonVertical2['default'],
            {
              id: 'feedbackUserVoice',
              buttonStyle: (0, _utilsStyleMerger2['default'])(styles.link, styles.linkVertical),
              activeStyle: styles.activeStyle,
              title: _react2['default'].createElement(
                'span',
                { style: styles.dropDownTextVertical },
                this.state.currentLanguage
              )
            },
            this.state.languageList.map(function (entry, index) {
              return _react2['default'].createElement(
                _NavItem2['default'],
                { key: index,
                  onClick: function (e) {
                    return _this2._handleSelectLanguage(entry.ISO);
                  },
                  style: [styles.menuItemVertical, entry.name === _this2.state.currentLanguage ? styles.menuItemActive : {}],
                  linkStyle: styles.menuLink,
                  activeStyle: styles.menuItemActive
                },
                _this2.state.i18n(entry.name)
              );
            })
          ),
          _react2['default'].createElement(
            _NavItem2['default'],
            {
              onClick: function (e) {
                return _this2._handleGotoPage(_this2.state.isLogin ? _this2.state.v2consolePath : '/oauth/' + (_this2.state.i18nPrefix ? _this2.state.i18nPrefix + '/' : '') + 'login');
              },
              style: [styles.menuItemVertical, styles.activeStyle, { background: '#00a1de', cursor: 'pointer', boxShadow: '1px 2px 1px 0 rgba(0,0,0,0.1), 0 0 0 rgba(0,0,0,0.1)' }],
              linkStyle: styles.link,
              activeStyle: styles.activeStyle
            },
            this.state.isLogin ? this.state.i18n('Return to Console') : this.state.i18n('Sign in / Register now')
          )
        )
      );
    }
  }, {
    key: '_handleFeedbackClick',
    value: function _handleFeedbackClick() {
      var isChina = /\.cn$/.test(window.location.hostname);

      isChina ? this.userReport.show() : this.userVoice.show();
    }

    /**
    * 切換語言，保持原來的頁面
    *
    * @input  {string} i18nPrefix (ISO)
    * @output redirectUrl
    *
    * @author Michael Hsu
    */

  }, {
    key: '_handleSelectLanguage',
    value: function _handleSelectLanguage(i18nPrefix) {
      var redirectUrl = '';
      var locationPath = window.location.pathname.split(/((resources)|(zh-TW)|(zh-CN)|(en))\//);

      // 位於 resources 時切換語言
      if (/resources/.test(window.location.pathname)) {
        redirectUrl = '' + (window.location.origin + '/') + (_configsResources2['default'].base + '/') + (i18nPrefix + '/') + locationPath.pop();
      }
      // 位於 /, /7688/ ... etc 時切換語言
      else {
          redirectUrl = window.location.origin; // http://mcs.mediatke.com
          if (locationPath[0] !== '/') {
            redirectUrl += locationPath[0].replace(/\/$/, ''); // etc: 結果 /7688
          }
          redirectUrl += '' + ('/' + i18nPrefix + '/'); // etc: 結果 /zh-TW/
        }

      var i18nHost = /\.((cn)|(com)|(io)|(inc))$/.exec(window.location.hostname);
      i18nHost = i18nHost && i18nHost[0];

      switch (i18nHost) {
        case '.cn':
          redirectUrl = redirectUrl.replace('/zh-CN', '');
          break;
        default:
          redirectUrl = redirectUrl.replace('/en', '');
          break;
      }

      // redirect
      window.location = redirectUrl;
    }

    /**
    * 取代 href 的 function，用 JS 去 redirect
    *
    * @input  {string} url
    * @output redirectUrl
    *
    * @author Michael Hsu
    */

  }, {
    key: '_handleGotoPage',
    value: function _handleGotoPage(url, _blank) {
      if (_blank) {
        window.open(url, '_blank');
      } else {
        // redirect
        window.location = url;
      }
    }

    /**
    * 取得目前的語言名稱
    *
    * @input  {string} i18nPrefix (ISO)
    * @output {string} language name
    *
    * Example: en => English, zh-TW => 繁體中文
    *
    * @author Michael Hsu
    */

  }, {
    key: '_getCurrentLanguage',
    value: function _getCurrentLanguage(i18nPrefix) {
      var _iteratorNormalCompletion = true;
      var _didIteratorError = false;
      var _iteratorError = undefined;

      try {
        for (var _iterator = _configsLanguagesJson2['default'].langhageList[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {
          var entry = _step.value;

          if (i18nPrefix === entry.ISO) {
            return entry.name;
          }
        }
      } catch (err) {
        _didIteratorError = true;
        _iteratorError = err;
      } finally {
        try {
          if (!_iteratorNormalCompletion && _iterator['return']) {
            _iterator['return']();
          }
        } finally {
          if (_didIteratorError) {
            throw _iteratorError;
          }
        }
      }
    }

    /**
    * Menu (Resources / Help) 是否 active
    *
    * @input  {string} listName (resourcesList / helpList)
    * @output {boolean}
    *
    * @author Michael Hsu
    */

  }, {
    key: '_isMenuActive',
    value: function _isMenuActive(listName) {
      switch (listName) {
        case 'resourcesList':
          return (/resources/.test(window.location.pathname) && !/faq/.test(window.location.pathname)
          );
        case 'helpList':
          return (/resources/.test(window.location.pathname) && /faq/.test(window.location.pathname)
          );
      }
    }

    /**
    * Item (Resources / Help) 是否 active
    *
    * @input  {string} regPath (introduction / key_conecpt ...)
    * @output {boolean}
    *
    * @author Michael Hsu
    */

  }, {
    key: '_isItemActive',
    value: function _isItemActive(regPath) {
      return new RegExp(regPath).test(window.location.pathname);
    }

    /**
    * 處理 media query
    * ref: https://developer.mozilla.org/en-US/docs/Web/Guide/CSS/Testing_media_queries
    *
    * @input  {object} mql
    *
    * @author Michael Hsu
    */

  }, {
    key: '_handleMediaQueryChange',
    value: function _handleMediaQueryChange(mql) {
      this.setState({
        isMobileMode: mql.matches ? true : false
      });
    }

    /**
    * 處理漢堡堡是否點擊展開
    *
    * @author Michael Hsu
    */

  }, {
    key: '_handleNavbarClick',
    value: function _handleNavbarClick() {
      this.setState({
        isNavbarClicked: !this.state.isNavbarClicked
      });
    }

    /**
    * 處理 basePath 的調整，刪除不需要的 locale
    *
    * @input  (string) basePath
    * @output (string) adjuested basePath
    *
    * Example: 'mcs.mediatek.cn/zh-CN' -> 'mcs.mediatek.cn'
    * Example: 'mcs.mediatek.com/en' -> 'mcs.mediatek.com'
    *
    * @author Michael Hsu
    */

  }, {
    key: '_adjustPathLocale',
    value: function _adjustPathLocale(path) {
      var i18nHost = /\.((cn)|(com)|(io)|(inc))$/.exec(window.location.hostname);
      i18nHost = i18nHost && i18nHost[0];

      switch (i18nHost) {
        case '.cn':
          return path.replace('/zh-CN', '');
        default:
          return path.replace('/en', '');
      }
    }
  }]);

  return Header;
})(_react2['default'].Component);

exports['default'] = (0, _radium2['default'])(Header);

var styles = {
  header: {
    width: '100%',
    height: 50,
    background: '#00a1de',
    boxShadow: '1px 2px 1px 0 rgba(0,0,0,0.1), 0 0 0 rgba(0,0,0,0.1)',
    position: 'fixed',
    zIndex: 99999,
    fontSize: 13,
    userSelect: 'none'
  },
  container: {
    background: '#00a1de',
    margin: '0 auto',
    padding: '0px 9px',
    maxWidth: 954,
    position: 'relative',
    zIndex: 1002
  },
  tablets: {
    ul: {
      padding: 0,
      margin: 0,
      position: 'relative',
      zIndex: 1001,
      backgroundColor: 'rgb(25, 149, 204)',
      transition: 'transform .2s linear'
    }
  },
  tabletsShow: {
    transform: 'translate3d(0, 0, 0)'
  },
  tabletsHide: {
    transform: 'translate3d(0, -100%, 0)'
  },
  item: {
    marginLeft: '-0.32em'
  },
  link: {
    lineHeight: '50px',
    color: '#fff',
    position: 'relative',
    padding: '19px 12px 17px 12px',
    backgroundColor: '#00a1de',
    zIndex: 1004
  },
  linkVertical: {
    padding: 0,
    display: 'inline-block',
    width: '100%',
    backgroundColor: '#00a1de'
  },
  logoLink: {
    lineHeight: '50px',
    padding: '18px 5px',
    marginRight: 15
  },
  logo: {
    width: 120,
    verticalAlign: 'middle'
  },
  activeStyle: {
    backgroundColor: '#1995cc'
  },
  menuLink: {
    display: 'block',
    clear: 'both',
    fontWeight: '400',
    padding: '10px 20px',
    color: '#fff'
  },
  menuItem: {
    width: '100%',
    height: '40px',
    textAlign: 'left'
  },
  menuItemVertical: {
    width: '100%',
    lineHeight: '40px',
    textAlign: 'center'
  },
  menuItemActive: {
    backgroundColor: '#0c86bc'
  },
  dropDownTextVertical: {
    padding: '0 0 0 34px'
  },
  prefixIcon: {
    position: 'relative',
    marginLeft: 5,
    marginRight: 5,
    fontSize: 13
  },
  navbar: {
    position: 'relative',
    marginLeft: 0,
    marginRight: 0,
    fontSize: 25,
    top: 8
  }
};
module.exports = exports['default'];