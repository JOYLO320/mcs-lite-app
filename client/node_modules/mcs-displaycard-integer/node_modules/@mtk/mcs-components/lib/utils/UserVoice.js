/**
* 設定 UserVoice
*
* @input  {string} target - DOM ID
* @input  {string} locale - language
* @input  {string} API_KEY
*
* @output {object} UserVoice (global)
*
* @author Michael Hsu
*/

'use strict';

Object.defineProperty(exports, '__esModule', {
  value: true
});

var _createClass = (function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ('value' in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; })();

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError('Cannot call a class as a function'); } }

var UserVoice = (function () {
  function UserVoice(_ref) {
    var target = _ref.target;
    var locale = _ref.locale;
    var API_KEY = _ref.API_KEY;

    _classCallCheck(this, UserVoice);

    this.API_KEY = API_KEY;
    this.target = target;
    this.locale = locale;
  }

  _createClass(UserVoice, [{
    key: 'renderScript',
    value: function renderScript() {
      var uv = document.createElement('script');
      uv.type = 'text/javascript';
      uv.async = true;
      uv.src = '//widget.uservoice.com/' + this.API_KEY + '.js';
      var s = document.getElementsByTagName('script')[0];
      s.parentNode.insertBefore(uv, s);
    }
  }, {
    key: 'setup',
    value: function setup() {
      this.renderScript();

      // Include the UserVoice JavaScript SDK (only needed once on a page)
      global.UserVoice = window.UserVoice || [];

      // locale ISO 不同規則
      // Reference: https://developer.uservoice.com/docs/single-sign-on/single-sign-on/
      if (this.locale === 'zh-CN') this.locale = 'cn';

      global.UserVoice.push(['set', {
        target: this.target,
        accent_color: '#448dd6',
        trigger_color: 'white',
        trigger_background_color: 'rgba(46, 49, 51, 0.6)',
        locale: this.locale,
        right: '155px'
      }]);
      global.UserVoice.push(['identify', {}]);
      global.UserVoice.push(['autoprompt', {}]);

      return this;
    }
  }, {
    key: 'show',
    value: function show() {
      global.UserVoice.push(['show', {
        mode: 'contact' // mode: contact, smartvote, satisfaction
      }]);
    }
  }]);

  return UserVoice;
})();

exports['default'] = UserVoice;
module.exports = exports['default'];