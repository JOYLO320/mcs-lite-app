'use strict';

Object.defineProperty(exports, '__esModule', {
  value: true
});

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _recompose = require('recompose');

var _commonCardStylesBaseCss = require('../common/card/styles/base.css');

var _commonCardStylesBaseCss2 = _interopRequireDefault(_commonCardStylesBaseCss);

var _commonKeyValueElement = require('../common/keyValueElement');

var _commonKeyValueElement2 = _interopRequireDefault(_commonKeyValueElement);

var _switchStylesMainCss = require('../switch/styles/main.css');

var _switchStylesMainCss2 = _interopRequireDefault(_switchStylesMainCss);

var _classnames = require('classnames');

var _classnames2 = _interopRequireDefault(_classnames);

var _commonUtils = require('../common/Utils');

var display = function display(_ref) {
  var format = _ref.format;
  var displayType = _ref.displayType;
  return _react2['default'].createElement(
    'div',
    { className: (0, _classnames2['default'])(_commonCardStylesBaseCss2['default'].base, _commonCardStylesBaseCss2['default'][displayType], _switchStylesMainCss2['default'].displayBase) },
    format.map(function (key, index) {
      return _react2['default'].createElement(_commonKeyValueElement2['default'], _extends({ key: index }, key, { className: _switchStylesMainCss2['default'].key }));
    })
  );
};

var propTypes = {
  numberOfCategory: _react.PropTypes.number.isRequired,
  displayType: _react.PropTypes.oneOf(['none', 'preview', 'embeded']),
  status: _react.PropTypes.object,
  format: _react.PropTypes.array.isRequired
};

exports.propTypes = propTypes;
exports['default'] = (0, _recompose.compose)((0, _recompose.defaultProps)({
  status: { value: '0' },
  displayType: 'none',
  numberOfCategory: 2
}), (0, _recompose.setPropTypes)(propTypes), _recompose.pure, (0, _recompose.mapPropsOnChange)(['status', 'format'], function (props) {
  var status = props.status;
  var format = props.format;

  var newFormat = (0, _commonUtils.adjustFormatStatus)(format, status.value);
  return _extends({}, props, {
    format: newFormat
  });
}))(display);