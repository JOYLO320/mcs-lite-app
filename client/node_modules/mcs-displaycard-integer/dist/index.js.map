{"version":3,"sources":["index.js"],"names":["MyComponent","props","context","state","temperature","onMessage","bind","connect","server","addMessageListener","removeMessageListener","data","setState","console","log","createElement","values","value","deviceId","name","dataChnId","description","recordedAt","numberOfCards","configs","Component"],"mappings":";;;;;;;;AAAA;;;;AACA;;AACA;;AACA;;;;;;;;;;IAEqBA,W;;;AACjB,yBAAWC,KAAX,EAAWC,OAAX,EAA4B;AAAA;;AAGxB;AAHwB,8HAClBD,KADkB,EACXC,OADW;;AAIxB,cAAKC,KAAL,GAAa;AACTC,yBAAa,CAAC;AADL,SAAb;;AAIA;AACA,cAAKC,SAAL,GAAiB,MAAKA,SAAL,CAAeC,IAAf,OAAjB;;AAEA;AACA,6CAAiBC,OAAjB,CAAyB,MAAKN,KAAL,CAAWO,MAApC;AAZwB;AAa3B;;;;4CAEmB;AAChB;AACA,+CAAeC,kBAAf,CAAkC,KAAKJ,SAAvC;AACH;;;+CAEsB;AACnB;AACA,+CAAeK,qBAAf,CAAqC,KAAKL,SAA1C;AACH;;;kCAEQM,I,EAAO;AACZ;AACA,iBAAKC,QAAL,CAAc;AACVR,6BAAaO,KAAKP;AADR,aAAd;AAGAS,oBAAQC,GAAR,CAAYH,IAAZ;AACH;;;iCAEQ;AACL,mBACI,gBAAAI,aAAA,CAAA,KAAA,EAAI,IAAJ,EACI,gBAAAA,aAAA,uBAAmB;AACjBC,wBAAM,EAAEC,OAAO,KAAMd,KAAN,CAAYC,WAArB,EADW;AAEjBc,0BAAQ,KAAMjB,KAAN,CAAYiB,QAFH;AAGjBC,sBAAI,KAAMlB,KAAN,CAAYkB,IAHC;AAIjBC,2BAAS,KAAMnB,KAAN,CAAYmB,SAJJ;AAKjBC,6BAAW,KAAMpB,KAAN,CAAYoB,WALN;AAMjBC,4BAAU,KAAMrB,KAAN,CAAYqB,UANL;AAOjBC,+BAAa,KAAMtB,KAAN,CAAYsB,aAPR;AAQjBC,yBAAO,KAAMvB,KAAN,CAAYuB,OARF,EAAnB,CADJ,CADJ;AAcH;;;;EAjDoC,gBAAMC,S;;kBAA1BzB,W","file":"index.js","sourcesContent":["import { default as React } from 'react';\nimport { render } from 'react-dom';\nimport { WebsocketStore, WebsocketActions } from 'react-websocket-flux';\nimport { DisplayCard as DisplayIntegerCard } from '@mtk/mcs-components/lib/datachannels/integer';\n\nexport default class MyComponent extends React.Component {\n    constructor(props, context) {\n        super(props, context);\n\n        // 初始化 this.state\n        this.state = {\n            temperature: -1\n        };\n\n        // WebSocket 的 'onMessage' callback\n        this.onMessage = this.onMessage.bind(this);\n\n        // 連線到 WebSocket Server\n        WebsocketActions.connect(this.props.server);\n    }\n\n    componentDidMount() {\n        // 將 'onMessage' 註冊到 Flux 的 Store\n        WebsocketStore.addMessageListener(this.onMessage);\n    }\n\n    componentWillUnmount() {\n        // 將 'onMessage' 從 Flux 的 Store 解除註冊\n        WebsocketStore.removeMessageListener(this.onMessage);\n    }\n\n    onMessage(data) {\n        // Deserialize\n        this.setState({\n            temperature: data.temperature\n        });\n        console.log(data)\n    }\n\n    render() {\n        return (\n            React.createElement(\"div\", null, \n                React.createElement(DisplayIntegerCard, {\n                  values: { value: this.state.temperature}, \n                  deviceId: this.props.deviceId, \n                  name: this.props.name, \n                  dataChnId: this.props.dataChnId, \n                  description: this.props.description, \n                  recordedAt: this.props.recordedAt, \n                  numberOfCards: this.props.numberOfCards, \n                  configs: this.props.configs}\n                )\n            )\n        );\n    }\n}\n"],"sourceRoot":"/source/"}