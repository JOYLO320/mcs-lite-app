'use strict';

Object.defineProperty(exports, '__esModule', {
  value: true
});

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _recompose = require('recompose');

var _detailButton = require('../detailButton');

var _detailButton2 = _interopRequireDefault(_detailButton);

var _mtkUiLibCard = require('mtk-ui/lib/Card');

var _mtkUiLibCard2 = _interopRequireDefault(_mtkUiLibCard);

var _fullScreenButton = require('../fullScreenButton');

var _fullScreenButton2 = _interopRequireDefault(_fullScreenButton);

var _stylesMainCss = require('./styles/main.css');

var _stylesMainCss2 = _interopRequireDefault(_stylesMainCss);

var displayCard = function displayCard(_ref) {
  var children = _ref.children;
  var fullScreenConfig = _ref.fullScreenConfig;
  var detailButtonConfig = _ref.detailButtonConfig;
  var block = _ref.block;
  return _react2['default'].createElement(
    _mtkUiLibCard2['default'],
    {
      className: _stylesMainCss2['default'].base,
      style: { width: 280 * block }
    },
    _react2['default'].createElement(
      'div',
      { className: _stylesMainCss2['default'].info },
      fullScreenConfig && _react2['default'].createElement(_fullScreenButton2['default'], { config: fullScreenConfig }),
      detailButtonConfig && _react2['default'].createElement(_detailButton2['default'], { config: detailButtonConfig })
    ),
    _react2['default'].createElement(
      'div',
      { style: { marginTop: -36 } },
      children
    )
  );
};

exports['default'] = (0, _recompose.compose)((0, _recompose.defaultProps)({
  numberOfCards: 2
}), (0, _recompose.withState)('block', 'setBlock', function (props) {
  return props.numberOfCards > props.configs.card ? props.configs.card : props.numberOfCards;
}), (0, _recompose.setPropTypes)({
  block: _react.PropTypes.number.isRequired,
  numberOfCards: _react.PropTypes.number,
  children: _react.PropTypes.oneOfType([_react.PropTypes.object, _react.PropTypes.array]),
  infoConfig: _react.PropTypes.object,
  fullScreenConfig: _react.PropTypes.object,
  detailButtonConfig: _react.PropTypes.object,
  configs: _react.PropTypes.object
}), (0, _recompose.mapProps)(function (props) {
  return _extends({}, props, {
    block: props.numberOfCards > props.configs.card ? props.configs.card : props.numberOfCards
  });
}), _recompose.pure)(displayCard);
module.exports = exports['default'];