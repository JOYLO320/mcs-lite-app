'use strict';

Object.defineProperty(exports, '__esModule', {
  value: true
});

var _createClass = (function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ('value' in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; })();

var _get = function get(_x, _x2, _x3) { var _again = true; _function: while (_again) { var object = _x, property = _x2, receiver = _x3; _again = false; if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { _x = parent; _x2 = property; _x3 = receiver; _again = true; desc = parent = undefined; continue _function; } } else if ('value' in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } } };

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }

function _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError('Cannot call a class as a function'); } }

function _inherits(subClass, superClass) { if (typeof superClass !== 'function' && superClass !== null) { throw new TypeError('Super expression must either be null or a function, not ' + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _fbjsLibEventListener = require('fbjs/lib/EventListener');

var _fbjsLibEventListener2 = _interopRequireDefault(_fbjsLibEventListener);

var _radium = require('radium');

var _radium2 = _interopRequireDefault(_radium);

var _internalClickable = require('./internal/Clickable');

var _internalClickable2 = _interopRequireDefault(_internalClickable);

var _utilsStyleMerger = require('./utils/styleMerger');

var _utilsStyleMerger2 = _interopRequireDefault(_utilsStyleMerger);

var _Nav = require('./Nav');

var _Nav2 = _interopRequireDefault(_Nav);

var DropdownButton = (function (_Clickable) {
  _inherits(DropdownButton, _Clickable);

  function DropdownButton(props) {
    _classCallCheck(this, DropdownButton);

    _get(Object.getPrototypeOf(DropdownButton.prototype), 'constructor', this).call(this, props);
    this.state = this.state || {};
    this.state.isOpen = false;
  }

  _createClass(DropdownButton, [{
    key: 'render',
    value: function render() {
      var _this = this;

      var _props = this.props;
      var menuStyle = _props.style;
      var buttonStyle = _props.buttonStyle;
      var activeStyle = _props.activeStyle;
      var title = _props.title;
      var children = _props.children;
      var id = _props.id;
      var arrowIcon = _props.arrowIcon;

      var props = _objectWithoutProperties(_props, ['style', 'buttonStyle', 'activeStyle', 'title', 'children', 'id', 'arrowIcon']);

      return _react2['default'].createElement(
        'li',
        { id: this.props.id, style: [styles.item, (this.state.isHover || this.state.isOpen) && activeStyle, menuStyle] },
        _react2['default'].createElement(
          'span',
          { onClick: function (e) {
              return _this._handleClick(e);
            },
            ref: 'title',
            style: [buttonStyle, (this.state.isHover || this.state.isOpen) && activeStyle] },
          title,
          _react2['default'].createElement('i', { className: 'fa fa-sort-down', style: [styles.dropDownIcon, this.state.isOpen ? styles.dropDownIconOpen : styles.dropDownIconClose, arrowIcon ? {} : { display: 'none' }] })
        ),
        _react2['default'].createElement(
          _Nav2['default'],
          { dropdownMenu: true, style: (0, _utilsStyleMerger2['default'])(styles.desktopNav, this.state.isOpen ? styles.desktopNavShow : styles.desktopNavHide) },
          _react2['default'].Children.map(children, function (child, index) {
            return _react2['default'].cloneElement(child, {
              key: index,
              style: [child.props.style, children.length === index + 1 ? { borderRadius: '0 0 4px 4px' } : {}]
            });
          })
        )
      );
    }
  }, {
    key: '_handleClick',
    value: function _handleClick(e) {
      e.preventDefault();
      if (this.state.isOpen) {
        return this._hide();
      }

      if (this._onDocumentClickListener) {
        this._onDocumentClickListener.remove();
      }

      this.setState({ isOpen: true });
      this._onDocumentClickListener = _fbjsLibEventListener2['default'].listen(document, 'click', this._hide.bind(this));
      this._onDocumentKeyupListener = _fbjsLibEventListener2['default'].listen(document, 'keyup', this._hide.bind(this));
    }
  }, {
    key: '_hide',
    value: function _hide() {
      this.setState({ isOpen: false });

      if (this._onDocumentClickListener) {
        this._onDocumentClickListener.remove();
      }

      if (this._onDocumentKeyupListener) {
        this._onDocumentKeyupListener.remove();
      }
    }
  }]);

  return DropdownButton;
})(_internalClickable2['default']);

DropdownButton.propTypes = {
  buttonStyle: _react.PropTypes.object,
  activeStyle: _react.PropTypes.object,
  title: _react2['default'].PropTypes.oneOfType([_react2['default'].PropTypes.string, _react2['default'].PropTypes.object]),
  arrowIcon: _react2['default'].PropTypes.bool
};
DropdownButton.defaultProps = {
  arrowIcon: true
};

exports['default'] = (0, _radium2['default'])(DropdownButton);

var styles = {
  item: {
    marginLeft: '-0.32em',
    display: 'inline-block',
    listStyleType: 'none',
    cursor: 'pointer',
    position: 'relative'
  },
  desktopNav: {
    display: 'block',
    transition: 'transform .2s linear',
    zIndex: 1003
  },
  desktopNavShow: {
    transform: 'translate3d(0, 0, 0)'
  },
  desktopNavHide: {
    transform: 'translate3d(0, -102%, 0)'
  },
  dropDownIcon: {
    position: 'relative',
    marginLeft: 10,
    marginRight: 5,
    top: '-3px',
    fontSize: 15,
    transition: 'transform .1s linear'
  },
  dropDownIconOpen: {
    top: 4,
    transform: 'rotate(-180deg)'
  },
  dropDownIconClose: {
    top: -3,
    transform: 'rotate(0deg)'
  }
};
module.exports = exports['default'];