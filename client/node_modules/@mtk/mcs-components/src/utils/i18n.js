import i18next from 'i18next-client';
import i18nextConfig from '../configs/i18next.json';
import assign from 'lodash.assign';

/**
* 設定 i18next
*
* @input {object} option
{
  "lng": "預設語言",
  "fallbackLng": "如果沒有抓到剛語言的檔案，則改成這個語言",
  "supportedLngs": [ "en", "zh-TW", "zh-CN" ],
  "preload": [ "en", "zh-TW", "zh-CN" ],
  "debug": false,
  "useLocalStorage": true,
  "localStorageExpirationTime": 86400000
}
*
* Reference: http://i18next.com/node/pages/doc_init.html
*
* @output {function} translate
*
* @author Michael Hsu
*/

export const setup = (option) => {
  // merge config option
  option = assign(i18nextConfig, option);

  // tree: lng -> namespace -> key -> nested key
  option.resStore = {};
  option.supportedLngs.forEach((language) => {
    option.resStore[language] = { translation: require(`../locales/${language}.json`) };
  });

  return new Promise((resolve, reject) => {
    i18next.init(option);
    resolve(i18next);
  });
};
